/****************************************************************************
** Meta object code from reading C++ file 'qnamespace.h'
**
** Created by: The Qt Meta Object Compiler version 69 (Qt 6.9.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../../../../src/corelib/global/qnamespace.h"
#include <QtCore/qobject.h>
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qnamespace.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 69
#error "This file was generated using the moc from 6.9.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN2QtE_t {};
} // unnamed namespace

template <> constexpr inline auto Qt::qt_create_metaobjectdata<qt_meta_tag_ZN2QtE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "Qt",
        "GlobalColor",
        "color0",
        "color1",
        "black",
        "white",
        "darkGray",
        "gray",
        "lightGray",
        "red",
        "green",
        "blue",
        "cyan",
        "magenta",
        "yellow",
        "darkRed",
        "darkGreen",
        "darkBlue",
        "darkCyan",
        "darkMagenta",
        "darkYellow",
        "transparent",
        "ColorScheme",
        "Unknown",
        "Light",
        "Dark",
        "MouseButtons",
        "MouseButton",
        "NoButton",
        "LeftButton",
        "RightButton",
        "MiddleButton",
        "BackButton",
        "XButton1",
        "ExtraButton1",
        "ForwardButton",
        "XButton2",
        "ExtraButton2",
        "TaskButton",
        "ExtraButton3",
        "ExtraButton4",
        "ExtraButton5",
        "ExtraButton6",
        "ExtraButton7",
        "ExtraButton8",
        "ExtraButton9",
        "ExtraButton10",
        "ExtraButton11",
        "ExtraButton12",
        "ExtraButton13",
        "ExtraButton14",
        "ExtraButton15",
        "ExtraButton16",
        "ExtraButton17",
        "ExtraButton18",
        "ExtraButton19",
        "ExtraButton20",
        "ExtraButton21",
        "ExtraButton22",
        "ExtraButton23",
        "ExtraButton24",
        "AllButtons",
        "MaxMouseButton",
        "MouseButtonMask",
        "Orientation",
        "Horizontal",
        "Vertical",
        "Orientations",
        "FocusPolicy",
        "NoFocus",
        "TabFocus",
        "ClickFocus",
        "StrongFocus",
        "WheelFocus",
        "TabFocusBehavior",
        "NoTabFocus",
        "TabFocusTextControls",
        "TabFocusListControls",
        "TabFocusAllControls",
        "SortOrder",
        "AscendingOrder",
        "DescendingOrder",
        "SplitBehavior",
        "SplitBehaviorFlags",
        "KeepEmptyParts",
        "SkipEmptyParts",
        "Alignment",
        "AlignmentFlag",
        "AlignLeft",
        "AlignLeading",
        "AlignRight",
        "AlignTrailing",
        "AlignHCenter",
        "AlignJustify",
        "AlignAbsolute",
        "AlignHorizontal_Mask",
        "AlignTop",
        "AlignBottom",
        "AlignVCenter",
        "AlignBaseline",
        "AlignVertical_Mask",
        "AlignCenter",
        "TextFlag",
        "TextSingleLine",
        "TextDontClip",
        "TextExpandTabs",
        "TextShowMnemonic",
        "TextWordWrap",
        "TextWrapAnywhere",
        "TextDontPrint",
        "TextIncludeTrailingSpaces",
        "TextHideMnemonic",
        "TextJustificationForced",
        "TextForceLeftToRight",
        "TextForceRightToLeft",
        "TextLongestVariant",
        "TextElideMode",
        "ElideLeft",
        "ElideRight",
        "ElideMiddle",
        "ElideNone",
        "WindowType",
        "Widget",
        "Window",
        "Dialog",
        "Sheet",
        "Drawer",
        "Popup",
        "Tool",
        "ToolTip",
        "SplashScreen",
        "Desktop",
        "SubWindow",
        "ForeignWindow",
        "CoverWindow",
        "WindowType_Mask",
        "MSWindowsFixedSizeDialogHint",
        "MSWindowsOwnDC",
        "BypassWindowManagerHint",
        "X11BypassWindowManagerHint",
        "FramelessWindowHint",
        "WindowTitleHint",
        "WindowSystemMenuHint",
        "WindowMinimizeButtonHint",
        "WindowMaximizeButtonHint",
        "WindowMinMaxButtonsHint",
        "WindowContextHelpButtonHint",
        "WindowShadeButtonHint",
        "WindowStaysOnTopHint",
        "WindowTransparentForInput",
        "WindowOverridesSystemGestures",
        "WindowDoesNotAcceptFocus",
        "MaximizeUsingFullscreenGeometryHint",
        "ExpandedClientAreaHint",
        "NoTitleBarBackgroundHint",
        "CustomizeWindowHint",
        "WindowStaysOnBottomHint",
        "WindowCloseButtonHint",
        "MacWindowToolBarButtonHint",
        "BypassGraphicsProxyWidget",
        "NoDropShadowWindowHint",
        "WindowFullscreenButtonHint",
        "WindowFlags",
        "WindowState",
        "WindowNoState",
        "WindowMinimized",
        "WindowMaximized",
        "WindowFullScreen",
        "WindowActive",
        "WindowStates",
        "ApplicationState",
        "ApplicationSuspended",
        "ApplicationHidden",
        "ApplicationInactive",
        "ApplicationActive",
        "ScreenOrientation",
        "PrimaryOrientation",
        "PortraitOrientation",
        "LandscapeOrientation",
        "InvertedPortraitOrientation",
        "InvertedLandscapeOrientation",
        "ScreenOrientations",
        "WidgetAttribute",
        "WA_Disabled",
        "WA_UnderMouse",
        "WA_MouseTracking",
        "WA_OpaquePaintEvent",
        "WA_StaticContents",
        "WA_LaidOut",
        "WA_PaintOnScreen",
        "WA_NoSystemBackground",
        "WA_UpdatesDisabled",
        "WA_Mapped",
        "WA_InputMethodEnabled",
        "WA_WState_Visible",
        "WA_WState_Hidden",
        "WA_ForceDisabled",
        "WA_KeyCompression",
        "WA_PendingMoveEvent",
        "WA_PendingResizeEvent",
        "WA_SetPalette",
        "WA_SetFont",
        "WA_SetCursor",
        "WA_NoChildEventsFromChildren",
        "WA_WindowModified",
        "WA_Resized",
        "WA_Moved",
        "WA_PendingUpdate",
        "WA_InvalidSize",
        "WA_CustomWhatsThis",
        "WA_LayoutOnEntireRect",
        "WA_OutsideWSRange",
        "WA_GrabbedShortcut",
        "WA_TransparentForMouseEvents",
        "WA_PaintUnclipped",
        "WA_SetWindowIcon",
        "WA_NoMouseReplay",
        "WA_DeleteOnClose",
        "WA_RightToLeft",
        "WA_SetLayoutDirection",
        "WA_NoChildEventsForParent",
        "WA_ForceUpdatesDisabled",
        "WA_WState_Created",
        "WA_WState_CompressKeys",
        "WA_WState_InPaintEvent",
        "WA_WState_Reparented",
        "WA_WState_ConfigPending",
        "WA_WState_Polished",
        "WA_WState_OwnSizePolicy",
        "WA_WState_ExplicitShowHide",
        "WA_ShowModal",
        "WA_MouseNoMask",
        "WA_NoMousePropagation",
        "WA_Hover",
        "WA_InputMethodTransparent",
        "WA_QuitOnClose",
        "WA_KeyboardFocusChange",
        "WA_AcceptDrops",
        "WA_DropSiteRegistered",
        "WA_WindowPropagation",
        "WA_NoX11EventCompression",
        "WA_TintedBackground",
        "WA_X11OpenGLOverlay",
        "WA_AlwaysShowToolTips",
        "WA_MacOpaqueSizeGrip",
        "WA_SetStyle",
        "WA_SetLocale",
        "WA_MacShowFocusRect",
        "WA_MacNormalSize",
        "WA_MacSmallSize",
        "WA_MacMiniSize",
        "WA_LayoutUsesWidgetRect",
        "WA_StyledBackground",
        "WA_CanHostQMdiSubWindowTitleBar",
        "WA_MacAlwaysShowToolWindow",
        "WA_StyleSheet",
        "WA_ShowWithoutActivating",
        "WA_X11BypassTransientForHint",
        "WA_NativeWindow",
        "WA_DontCreateNativeAncestors",
        "WA_DontShowOnScreen",
        "WA_X11NetWmWindowTypeDesktop",
        "WA_X11NetWmWindowTypeDock",
        "WA_X11NetWmWindowTypeToolBar",
        "WA_X11NetWmWindowTypeMenu",
        "WA_X11NetWmWindowTypeUtility",
        "WA_X11NetWmWindowTypeSplash",
        "WA_X11NetWmWindowTypeDialog",
        "WA_X11NetWmWindowTypeDropDownMenu",
        "WA_X11NetWmWindowTypePopupMenu",
        "WA_X11NetWmWindowTypeToolTip",
        "WA_X11NetWmWindowTypeNotification",
        "WA_X11NetWmWindowTypeCombo",
        "WA_X11NetWmWindowTypeDND",
        "WA_SetWindowModality",
        "WA_WState_WindowOpacitySet",
        "WA_TranslucentBackground",
        "WA_AcceptTouchEvents",
        "WA_WState_AcceptedTouchBeginEvent",
        "WA_TouchPadAcceptSingleTouchEvents",
        "WA_X11DoNotAcceptFocus",
        "WA_AlwaysStackOnTop",
        "WA_TabletTracking",
        "WA_ContentsMarginsRespectsSafeArea",
        "WA_StyleSheetTarget",
        "WA_AttributeCount",
        "ApplicationAttribute",
        "AA_QtQuickUseDefaultSizePolicy",
        "AA_DontShowIconsInMenus",
        "AA_NativeWindows",
        "AA_DontCreateNativeWidgetSiblings",
        "AA_PluginApplication",
        "AA_DontUseNativeMenuBar",
        "AA_MacDontSwapCtrlAndMeta",
        "AA_Use96Dpi",
        "AA_DisableNativeVirtualKeyboard",
        "AA_DontUseNativeMenuWindows",
        "AA_SynthesizeTouchForUnhandledMouseEvents",
        "AA_SynthesizeMouseForUnhandledTouchEvents",
        "AA_UseHighDpiPixmaps",
        "AA_ForceRasterWidgets",
        "AA_UseDesktopOpenGL",
        "AA_UseOpenGLES",
        "AA_UseSoftwareOpenGL",
        "AA_ShareOpenGLContexts",
        "AA_SetPalette",
        "AA_EnableHighDpiScaling",
        "AA_DisableHighDpiScaling",
        "AA_UseStyleSheetPropagationInWidgetStyles",
        "AA_DontUseNativeDialogs",
        "AA_SynthesizeMouseForUnhandledTabletEvents",
        "AA_CompressHighFrequencyEvents",
        "AA_DontCheckOpenGLContextThreadAffinity",
        "AA_DisableShaderDiskCache",
        "AA_DontShowShortcutsInContextMenus",
        "AA_CompressTabletEvents",
        "AA_DisableSessionManager",
        "AA_AttributeCount",
        "ImageConversionFlags",
        "ImageConversionFlag",
        "ColorMode_Mask",
        "AutoColor",
        "ColorOnly",
        "MonoOnly",
        "AlphaDither_Mask",
        "ThresholdAlphaDither",
        "OrderedAlphaDither",
        "DiffuseAlphaDither",
        "NoAlpha",
        "Dither_Mask",
        "DiffuseDither",
        "OrderedDither",
        "ThresholdDither",
        "DitherMode_Mask",
        "AutoDither",
        "PreferDither",
        "AvoidDither",
        "NoOpaqueDetection",
        "NoFormatConversion",
        "BGMode",
        "TransparentMode",
        "OpaqueMode",
        "Key",
        "Key_Space",
        "Key_Any",
        "Key_Exclam",
        "Key_QuoteDbl",
        "Key_NumberSign",
        "Key_Dollar",
        "Key_Percent",
        "Key_Ampersand",
        "Key_Apostrophe",
        "Key_ParenLeft",
        "Key_ParenRight",
        "Key_Asterisk",
        "Key_Plus",
        "Key_Comma",
        "Key_Minus",
        "Key_Period",
        "Key_Slash",
        "Key_0",
        "Key_1",
        "Key_2",
        "Key_3",
        "Key_4",
        "Key_5",
        "Key_6",
        "Key_7",
        "Key_8",
        "Key_9",
        "Key_Colon",
        "Key_Semicolon",
        "Key_Less",
        "Key_Equal",
        "Key_Greater",
        "Key_Question",
        "Key_At",
        "Key_A",
        "Key_B",
        "Key_C",
        "Key_D",
        "Key_E",
        "Key_F",
        "Key_G",
        "Key_H",
        "Key_I",
        "Key_J",
        "Key_K",
        "Key_L",
        "Key_M",
        "Key_N",
        "Key_O",
        "Key_P",
        "Key_Q",
        "Key_R",
        "Key_S",
        "Key_T",
        "Key_U",
        "Key_V",
        "Key_W",
        "Key_X",
        "Key_Y",
        "Key_Z",
        "Key_BracketLeft",
        "Key_Backslash",
        "Key_BracketRight",
        "Key_AsciiCircum",
        "Key_Underscore",
        "Key_QuoteLeft",
        "Key_BraceLeft",
        "Key_Bar",
        "Key_BraceRight",
        "Key_AsciiTilde",
        "Key_nobreakspace",
        "Key_exclamdown",
        "Key_cent",
        "Key_sterling",
        "Key_currency",
        "Key_yen",
        "Key_brokenbar",
        "Key_section",
        "Key_diaeresis",
        "Key_copyright",
        "Key_ordfeminine",
        "Key_guillemotleft",
        "Key_notsign",
        "Key_hyphen",
        "Key_registered",
        "Key_macron",
        "Key_degree",
        "Key_plusminus",
        "Key_twosuperior",
        "Key_threesuperior",
        "Key_acute",
        "Key_micro",
        "Key_mu",
        "Key_paragraph",
        "Key_periodcentered",
        "Key_cedilla",
        "Key_onesuperior",
        "Key_masculine",
        "Key_guillemotright",
        "Key_onequarter",
        "Key_onehalf",
        "Key_threequarters",
        "Key_questiondown",
        "Key_Agrave",
        "Key_Aacute",
        "Key_Acircumflex",
        "Key_Atilde",
        "Key_Adiaeresis",
        "Key_Aring",
        "Key_AE",
        "Key_Ccedilla",
        "Key_Egrave",
        "Key_Eacute",
        "Key_Ecircumflex",
        "Key_Ediaeresis",
        "Key_Igrave",
        "Key_Iacute",
        "Key_Icircumflex",
        "Key_Idiaeresis",
        "Key_ETH",
        "Key_Ntilde",
        "Key_Ograve",
        "Key_Oacute",
        "Key_Ocircumflex",
        "Key_Otilde",
        "Key_Odiaeresis",
        "Key_multiply",
        "Key_Ooblique",
        "Key_Ugrave",
        "Key_Uacute",
        "Key_Ucircumflex",
        "Key_Udiaeresis",
        "Key_Yacute",
        "Key_THORN",
        "Key_ssharp",
        "Key_division",
        "Key_ydiaeresis",
        "Key_Escape",
        "Key_Tab",
        "Key_Backtab",
        "Key_Backspace",
        "Key_Return",
        "Key_Enter",
        "Key_Insert",
        "Key_Delete",
        "Key_Pause",
        "Key_Print",
        "Key_SysReq",
        "Key_Clear",
        "Key_Home",
        "Key_End",
        "Key_Left",
        "Key_Up",
        "Key_Right",
        "Key_Down",
        "Key_PageUp",
        "Key_PageDown",
        "Key_Shift",
        "Key_Control",
        "Key_Meta",
        "Key_Alt",
        "Key_CapsLock",
        "Key_NumLock",
        "Key_ScrollLock",
        "Key_F1",
        "Key_F2",
        "Key_F3",
        "Key_F4",
        "Key_F5",
        "Key_F6",
        "Key_F7",
        "Key_F8",
        "Key_F9",
        "Key_F10",
        "Key_F11",
        "Key_F12",
        "Key_F13",
        "Key_F14",
        "Key_F15",
        "Key_F16",
        "Key_F17",
        "Key_F18",
        "Key_F19",
        "Key_F20",
        "Key_F21",
        "Key_F22",
        "Key_F23",
        "Key_F24",
        "Key_F25",
        "Key_F26",
        "Key_F27",
        "Key_F28",
        "Key_F29",
        "Key_F30",
        "Key_F31",
        "Key_F32",
        "Key_F33",
        "Key_F34",
        "Key_F35",
        "Key_Super_L",
        "Key_Super_R",
        "Key_Menu",
        "Key_Hyper_L",
        "Key_Hyper_R",
        "Key_Help",
        "Key_Direction_L",
        "Key_Direction_R",
        "Key_AltGr",
        "Key_Multi_key",
        "Key_Codeinput",
        "Key_SingleCandidate",
        "Key_MultipleCandidate",
        "Key_PreviousCandidate",
        "Key_Mode_switch",
        "Key_Kanji",
        "Key_Muhenkan",
        "Key_Henkan",
        "Key_Romaji",
        "Key_Hiragana",
        "Key_Katakana",
        "Key_Hiragana_Katakana",
        "Key_Zenkaku",
        "Key_Hankaku",
        "Key_Zenkaku_Hankaku",
        "Key_Touroku",
        "Key_Massyo",
        "Key_Kana_Lock",
        "Key_Kana_Shift",
        "Key_Eisu_Shift",
        "Key_Eisu_toggle",
        "Key_Hangul",
        "Key_Hangul_Start",
        "Key_Hangul_End",
        "Key_Hangul_Hanja",
        "Key_Hangul_Jamo",
        "Key_Hangul_Romaja",
        "Key_Hangul_Jeonja",
        "Key_Hangul_Banja",
        "Key_Hangul_PreHanja",
        "Key_Hangul_PostHanja",
        "Key_Hangul_Special",
        "Key_Dead_Grave",
        "Key_Dead_Acute",
        "Key_Dead_Circumflex",
        "Key_Dead_Tilde",
        "Key_Dead_Macron",
        "Key_Dead_Breve",
        "Key_Dead_Abovedot",
        "Key_Dead_Diaeresis",
        "Key_Dead_Abovering",
        "Key_Dead_Doubleacute",
        "Key_Dead_Caron",
        "Key_Dead_Cedilla",
        "Key_Dead_Ogonek",
        "Key_Dead_Iota",
        "Key_Dead_Voiced_Sound",
        "Key_Dead_Semivoiced_Sound",
        "Key_Dead_Belowdot",
        "Key_Dead_Hook",
        "Key_Dead_Horn",
        "Key_Dead_Stroke",
        "Key_Dead_Abovecomma",
        "Key_Dead_Abovereversedcomma",
        "Key_Dead_Doublegrave",
        "Key_Dead_Belowring",
        "Key_Dead_Belowmacron",
        "Key_Dead_Belowcircumflex",
        "Key_Dead_Belowtilde",
        "Key_Dead_Belowbreve",
        "Key_Dead_Belowdiaeresis",
        "Key_Dead_Invertedbreve",
        "Key_Dead_Belowcomma",
        "Key_Dead_Currency",
        "Key_Dead_a",
        "Key_Dead_A",
        "Key_Dead_e",
        "Key_Dead_E",
        "Key_Dead_i",
        "Key_Dead_I",
        "Key_Dead_o",
        "Key_Dead_O",
        "Key_Dead_u",
        "Key_Dead_U",
        "Key_Dead_Small_Schwa",
        "Key_Dead_Capital_Schwa",
        "Key_Dead_Greek",
        "Key_Dead_Lowline",
        "Key_Dead_Aboveverticalline",
        "Key_Dead_Belowverticalline",
        "Key_Dead_Longsolidusoverlay",
        "Key_Back",
        "Key_Forward",
        "Key_Stop",
        "Key_Refresh",
        "Key_VolumeDown",
        "Key_VolumeMute",
        "Key_VolumeUp",
        "Key_BassBoost",
        "Key_BassUp",
        "Key_BassDown",
        "Key_TrebleUp",
        "Key_TrebleDown",
        "Key_MediaPlay",
        "Key_MediaStop",
        "Key_MediaPrevious",
        "Key_MediaNext",
        "Key_MediaRecord",
        "Key_MediaPause",
        "Key_MediaTogglePlayPause",
        "Key_HomePage",
        "Key_Favorites",
        "Key_Search",
        "Key_Standby",
        "Key_OpenUrl",
        "Key_LaunchMail",
        "Key_LaunchMedia",
        "Key_Launch0",
        "Key_Launch1",
        "Key_Launch2",
        "Key_Launch3",
        "Key_Launch4",
        "Key_Launch5",
        "Key_Launch6",
        "Key_Launch7",
        "Key_Launch8",
        "Key_Launch9",
        "Key_LaunchA",
        "Key_LaunchB",
        "Key_LaunchC",
        "Key_LaunchD",
        "Key_LaunchE",
        "Key_LaunchF",
        "Key_MonBrightnessUp",
        "Key_MonBrightnessDown",
        "Key_KeyboardLightOnOff",
        "Key_KeyboardBrightnessUp",
        "Key_KeyboardBrightnessDown",
        "Key_PowerOff",
        "Key_WakeUp",
        "Key_Eject",
        "Key_ScreenSaver",
        "Key_WWW",
        "Key_Memo",
        "Key_LightBulb",
        "Key_Shop",
        "Key_History",
        "Key_AddFavorite",
        "Key_HotLinks",
        "Key_BrightnessAdjust",
        "Key_Finance",
        "Key_Community",
        "Key_AudioRewind",
        "Key_BackForward",
        "Key_ApplicationLeft",
        "Key_ApplicationRight",
        "Key_Book",
        "Key_CD",
        "Key_Calculator",
        "Key_ToDoList",
        "Key_ClearGrab",
        "Key_Close",
        "Key_Copy",
        "Key_Cut",
        "Key_Display",
        "Key_DOS",
        "Key_Documents",
        "Key_Excel",
        "Key_Explorer",
        "Key_Game",
        "Key_Go",
        "Key_iTouch",
        "Key_LogOff",
        "Key_Market",
        "Key_Meeting",
        "Key_MenuKB",
        "Key_MenuPB",
        "Key_MySites",
        "Key_News",
        "Key_OfficeHome",
        "Key_Option",
        "Key_Paste",
        "Key_Phone",
        "Key_Calendar",
        "Key_Reply",
        "Key_Reload",
        "Key_RotateWindows",
        "Key_RotationPB",
        "Key_RotationKB",
        "Key_Save",
        "Key_Send",
        "Key_Spell",
        "Key_SplitScreen",
        "Key_Support",
        "Key_TaskPane",
        "Key_Terminal",
        "Key_Tools",
        "Key_Travel",
        "Key_Video",
        "Key_Word",
        "Key_Xfer",
        "Key_ZoomIn",
        "Key_ZoomOut",
        "Key_Away",
        "Key_Messenger",
        "Key_WebCam",
        "Key_MailForward",
        "Key_Pictures",
        "Key_Music",
        "Key_Battery",
        "Key_Bluetooth",
        "Key_WLAN",
        "Key_UWB",
        "Key_AudioForward",
        "Key_AudioRepeat",
        "Key_AudioRandomPlay",
        "Key_Subtitle",
        "Key_AudioCycleTrack",
        "Key_Time",
        "Key_Hibernate",
        "Key_View",
        "Key_TopMenu",
        "Key_PowerDown",
        "Key_Suspend",
        "Key_ContrastAdjust",
        "Key_LaunchG",
        "Key_LaunchH",
        "Key_TouchpadToggle",
        "Key_TouchpadOn",
        "Key_TouchpadOff",
        "Key_MicMute",
        "Key_Red",
        "Key_Green",
        "Key_Yellow",
        "Key_Blue",
        "Key_ChannelUp",
        "Key_ChannelDown",
        "Key_Guide",
        "Key_Info",
        "Key_Settings",
        "Key_MicVolumeUp",
        "Key_MicVolumeDown",
        "Key_New",
        "Key_Open",
        "Key_Find",
        "Key_Undo",
        "Key_Redo",
        "Key_MediaLast",
        "Key_Select",
        "Key_Yes",
        "Key_No",
        "Key_Cancel",
        "Key_Printer",
        "Key_Execute",
        "Key_Sleep",
        "Key_Play",
        "Key_Zoom",
        "Key_Exit",
        "Key_Context1",
        "Key_Context2",
        "Key_Context3",
        "Key_Context4",
        "Key_Call",
        "Key_Hangup",
        "Key_Flip",
        "Key_ToggleCallHangup",
        "Key_VoiceDial",
        "Key_LastNumberRedial",
        "Key_Camera",
        "Key_CameraFocus",
        "Key_unknown",
        "KeyboardModifier",
        "NoModifier",
        "ShiftModifier",
        "ControlModifier",
        "AltModifier",
        "MetaModifier",
        "KeypadModifier",
        "GroupSwitchModifier",
        "KeyboardModifierMask",
        "KeyboardModifiers",
        "Modifier",
        "META",
        "SHIFT",
        "CTRL",
        "ALT",
        "MODIFIER_MASK",
        "Modifiers",
        "ArrowType",
        "NoArrow",
        "UpArrow",
        "DownArrow",
        "LeftArrow",
        "RightArrow",
        "PenStyle",
        "NoPen",
        "SolidLine",
        "DashLine",
        "DotLine",
        "DashDotLine",
        "DashDotDotLine",
        "CustomDashLine",
        "PenCapStyle",
        "FlatCap",
        "SquareCap",
        "RoundCap",
        "MPenCapStyle",
        "PenJoinStyle",
        "MiterJoin",
        "BevelJoin",
        "RoundJoin",
        "SvgMiterJoin",
        "MPenJoinStyle",
        "BrushStyle",
        "NoBrush",
        "SolidPattern",
        "Dense1Pattern",
        "Dense2Pattern",
        "Dense3Pattern",
        "Dense4Pattern",
        "Dense5Pattern",
        "Dense6Pattern",
        "Dense7Pattern",
        "HorPattern",
        "VerPattern",
        "CrossPattern",
        "BDiagPattern",
        "FDiagPattern",
        "DiagCrossPattern",
        "LinearGradientPattern",
        "RadialGradientPattern",
        "ConicalGradientPattern",
        "TexturePattern",
        "SizeMode",
        "AbsoluteSize",
        "RelativeSize",
        "CursorShape",
        "ArrowCursor",
        "UpArrowCursor",
        "CrossCursor",
        "WaitCursor",
        "IBeamCursor",
        "SizeVerCursor",
        "SizeHorCursor",
        "SizeBDiagCursor",
        "SizeFDiagCursor",
        "SizeAllCursor",
        "BlankCursor",
        "SplitVCursor",
        "SplitHCursor",
        "PointingHandCursor",
        "ForbiddenCursor",
        "WhatsThisCursor",
        "BusyCursor",
        "OpenHandCursor",
        "ClosedHandCursor",
        "DragCopyCursor",
        "DragMoveCursor",
        "DragLinkCursor",
        "LastCursor",
        "BitmapCursor",
        "CustomCursor",
        "TextFormat",
        "PlainText",
        "RichText",
        "AutoText",
        "MarkdownText",
        "AspectRatioMode",
        "IgnoreAspectRatio",
        "KeepAspectRatio",
        "KeepAspectRatioByExpanding",
        "DockWidgetArea",
        "LeftDockWidgetArea",
        "RightDockWidgetArea",
        "TopDockWidgetArea",
        "BottomDockWidgetArea",
        "DockWidgetArea_Mask",
        "AllDockWidgetAreas",
        "NoDockWidgetArea",
        "DockWidgetAreas",
        "ToolBarArea",
        "LeftToolBarArea",
        "RightToolBarArea",
        "TopToolBarArea",
        "BottomToolBarArea",
        "ToolBarArea_Mask",
        "AllToolBarAreas",
        "NoToolBarArea",
        "ToolBarAreas",
        "DateFormat",
        "TextDate",
        "ISODate",
        "RFC2822Date",
        "ISODateWithMs",
        "TimeSpec",
        "LocalTime",
        "UTC",
        "OffsetFromUTC",
        "TimeZone",
        "DayOfWeek",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday",
        "ScrollBarPolicy",
        "ScrollBarAsNeeded",
        "ScrollBarAlwaysOff",
        "ScrollBarAlwaysOn",
        "CaseSensitivity",
        "CaseInsensitive",
        "CaseSensitive",
        "Corner",
        "TopLeftCorner",
        "TopRightCorner",
        "BottomLeftCorner",
        "BottomRightCorner",
        "Edge",
        "TopEdge",
        "LeftEdge",
        "RightEdge",
        "BottomEdge",
        "Edges",
        "ConnectionType",
        "AutoConnection",
        "DirectConnection",
        "QueuedConnection",
        "BlockingQueuedConnection",
        "UniqueConnection",
        "SingleShotConnection",
        "ShortcutContext",
        "WidgetShortcut",
        "WindowShortcut",
        "ApplicationShortcut",
        "WidgetWithChildrenShortcut",
        "FillRule",
        "OddEvenFill",
        "WindingFill",
        "MaskMode",
        "MaskInColor",
        "MaskOutColor",
        "ClipOperation",
        "NoClip",
        "ReplaceClip",
        "IntersectClip",
        "ItemSelectionMode",
        "ContainsItemShape",
        "IntersectsItemShape",
        "ContainsItemBoundingRect",
        "IntersectsItemBoundingRect",
        "ItemSelectionOperation",
        "ReplaceSelection",
        "AddToSelection",
        "TransformationMode",
        "FastTransformation",
        "SmoothTransformation",
        "Axis",
        "XAxis",
        "YAxis",
        "ZAxis",
        "FocusReason",
        "MouseFocusReason",
        "TabFocusReason",
        "BacktabFocusReason",
        "ActiveWindowFocusReason",
        "PopupFocusReason",
        "ShortcutFocusReason",
        "MenuBarFocusReason",
        "OtherFocusReason",
        "NoFocusReason",
        "ContextMenuPolicy",
        "NoContextMenu",
        "DefaultContextMenu",
        "ActionsContextMenu",
        "CustomContextMenu",
        "PreventContextMenu",
        "ContextMenuTrigger",
        "Press",
        "Release",
        "InputMethodQuery",
        "ImEnabled",
        "ImCursorRectangle",
        "ImFont",
        "ImCursorPosition",
        "ImSurroundingText",
        "ImCurrentSelection",
        "ImMaximumTextLength",
        "ImAnchorPosition",
        "ImHints",
        "ImPreferredLanguage",
        "ImAbsolutePosition",
        "ImTextBeforeCursor",
        "ImTextAfterCursor",
        "ImEnterKeyType",
        "ImAnchorRectangle",
        "ImInputItemClipRectangle",
        "ImReadOnly",
        "ImPlatformData",
        "ImQueryInput",
        "ImQueryAll",
        "InputMethodQueries",
        "InputMethodHint",
        "ImhNone",
        "ImhHiddenText",
        "ImhSensitiveData",
        "ImhNoAutoUppercase",
        "ImhPreferNumbers",
        "ImhPreferUppercase",
        "ImhPreferLowercase",
        "ImhNoPredictiveText",
        "ImhDate",
        "ImhTime",
        "ImhPreferLatin",
        "ImhMultiLine",
        "ImhNoEditMenu",
        "ImhNoTextHandles",
        "ImhDigitsOnly",
        "ImhFormattedNumbersOnly",
        "ImhUppercaseOnly",
        "ImhLowercaseOnly",
        "ImhDialableCharactersOnly",
        "ImhEmailCharactersOnly",
        "ImhUrlCharactersOnly",
        "ImhLatinOnly",
        "ImhExclusiveInputMask",
        "InputMethodHints",
        "EnterKeyType",
        "EnterKeyDefault",
        "EnterKeyReturn",
        "EnterKeyDone",
        "EnterKeyGo",
        "EnterKeySend",
        "EnterKeySearch",
        "EnterKeyNext",
        "EnterKeyPrevious",
        "ToolButtonStyle",
        "ToolButtonIconOnly",
        "ToolButtonTextOnly",
        "ToolButtonTextBesideIcon",
        "ToolButtonTextUnderIcon",
        "ToolButtonFollowStyle",
        "LayoutDirection",
        "LeftToRight",
        "RightToLeft",
        "LayoutDirectionAuto",
        "DropAction",
        "CopyAction",
        "MoveAction",
        "LinkAction",
        "ActionMask",
        "TargetMoveAction",
        "IgnoreAction",
        "DropActions",
        "CheckState",
        "Unchecked",
        "PartiallyChecked",
        "Checked",
        "ItemDataRole",
        "DisplayRole",
        "DecorationRole",
        "EditRole",
        "ToolTipRole",
        "StatusTipRole",
        "WhatsThisRole",
        "FontRole",
        "TextAlignmentRole",
        "BackgroundRole",
        "ForegroundRole",
        "CheckStateRole",
        "AccessibleTextRole",
        "AccessibleDescriptionRole",
        "SizeHintRole",
        "InitialSortOrderRole",
        "DisplayPropertyRole",
        "DecorationPropertyRole",
        "ToolTipPropertyRole",
        "StatusTipPropertyRole",
        "WhatsThisPropertyRole",
        "UserRole",
        "ItemFlags",
        "ItemFlag",
        "NoItemFlags",
        "ItemIsSelectable",
        "ItemIsEditable",
        "ItemIsDragEnabled",
        "ItemIsDropEnabled",
        "ItemIsUserCheckable",
        "ItemIsEnabled",
        "ItemIsAutoTristate",
        "ItemNeverHasChildren",
        "ItemIsUserTristate",
        "MatchFlags",
        "MatchFlag",
        "MatchExactly",
        "MatchContains",
        "MatchStartsWith",
        "MatchEndsWith",
        "MatchRegularExpression",
        "MatchWildcard",
        "MatchFixedString",
        "MatchTypeMask",
        "MatchCaseSensitive",
        "MatchWrap",
        "MatchRecursive",
        "WindowModality",
        "NonModal",
        "WindowModal",
        "ApplicationModal",
        "TextInteractionFlag",
        "NoTextInteraction",
        "TextSelectableByMouse",
        "TextSelectableByKeyboard",
        "LinksAccessibleByMouse",
        "LinksAccessibleByKeyboard",
        "TextEditable",
        "TextEditorInteraction",
        "TextBrowserInteraction",
        "TextInteractionFlags",
        "SizeHint",
        "MinimumSize",
        "PreferredSize",
        "MaximumSize",
        "MinimumDescent",
        "NSizeHints",
        "TouchPointStates",
        "TouchPointState",
        "TouchPointUnknownState",
        "TouchPointPressed",
        "TouchPointMoved",
        "TouchPointStationary",
        "TouchPointReleased",
        "GestureState",
        "NoGesture",
        "GestureStarted",
        "GestureUpdated",
        "GestureFinished",
        "GestureCanceled",
        "GestureType",
        "TapGesture",
        "TapAndHoldGesture",
        "PanGesture",
        "PinchGesture",
        "SwipeGesture",
        "CustomGesture",
        "LastGestureType",
        "NativeGestureType",
        "BeginNativeGesture",
        "EndNativeGesture",
        "PanNativeGesture",
        "ZoomNativeGesture",
        "SmartZoomNativeGesture",
        "RotateNativeGesture",
        "SwipeNativeGesture",
        "CursorMoveStyle",
        "LogicalMoveStyle",
        "VisualMoveStyle",
        "TimerType",
        "PreciseTimer",
        "CoarseTimer",
        "VeryCoarseTimer",
        "TimerId",
        "Invalid",
        "ScrollPhase",
        "NoScrollPhase",
        "ScrollBegin",
        "ScrollUpdate",
        "ScrollEnd",
        "ScrollMomentum",
        "MouseEventSource",
        "MouseEventNotSynthesized",
        "MouseEventSynthesizedBySystem",
        "MouseEventSynthesizedByQt",
        "MouseEventSynthesizedByApplication",
        "MouseEventFlags",
        "MouseEventFlag",
        "NoMouseEventFlag",
        "MouseEventCreatedDoubleClick",
        "MouseEventFlagMask",
        "ChecksumType",
        "ChecksumIso3309",
        "ChecksumItuV41",
        "HighDpiScaleFactorRoundingPolicy",
        "Unset",
        "Round",
        "Ceil",
        "Floor",
        "RoundPreferFloor",
        "PassThrough",
        "PermissionStatus",
        "Undetermined",
        "Granted",
        "Denied"
    };

    QtMocHelpers::UintData qt_methods {
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
        // enum 'GlobalColor'
        QtMocHelpers::EnumData<GlobalColor>(1, 1, QMC::EnumFlags{}).add({
            {    2, GlobalColor::color0 },
            {    3, GlobalColor::color1 },
            {    4, GlobalColor::black },
            {    5, GlobalColor::white },
            {    6, GlobalColor::darkGray },
            {    7, GlobalColor::gray },
            {    8, GlobalColor::lightGray },
            {    9, GlobalColor::red },
            {   10, GlobalColor::green },
            {   11, GlobalColor::blue },
            {   12, GlobalColor::cyan },
            {   13, GlobalColor::magenta },
            {   14, GlobalColor::yellow },
            {   15, GlobalColor::darkRed },
            {   16, GlobalColor::darkGreen },
            {   17, GlobalColor::darkBlue },
            {   18, GlobalColor::darkCyan },
            {   19, GlobalColor::darkMagenta },
            {   20, GlobalColor::darkYellow },
            {   21, GlobalColor::transparent },
        }),
        // enum 'ColorScheme'
        QtMocHelpers::EnumData<ColorScheme>(22, 22, QMC::EnumIsScoped).add({
            {   23, ColorScheme::Unknown },
            {   24, ColorScheme::Light },
            {   25, ColorScheme::Dark },
        }),
        // enum 'MouseButtons'
        QtMocHelpers::EnumData<MouseButtons>(26, 27, QMC::EnumFlags{}).add({
            {   28, MouseButton::NoButton },
            {   29, MouseButton::LeftButton },
            {   30, MouseButton::RightButton },
            {   31, MouseButton::MiddleButton },
            {   32, MouseButton::BackButton },
            {   33, MouseButton::XButton1 },
            {   34, MouseButton::ExtraButton1 },
            {   35, MouseButton::ForwardButton },
            {   36, MouseButton::XButton2 },
            {   37, MouseButton::ExtraButton2 },
            {   38, MouseButton::TaskButton },
            {   39, MouseButton::ExtraButton3 },
            {   40, MouseButton::ExtraButton4 },
            {   41, MouseButton::ExtraButton5 },
            {   42, MouseButton::ExtraButton6 },
            {   43, MouseButton::ExtraButton7 },
            {   44, MouseButton::ExtraButton8 },
            {   45, MouseButton::ExtraButton9 },
            {   46, MouseButton::ExtraButton10 },
            {   47, MouseButton::ExtraButton11 },
            {   48, MouseButton::ExtraButton12 },
            {   49, MouseButton::ExtraButton13 },
            {   50, MouseButton::ExtraButton14 },
            {   51, MouseButton::ExtraButton15 },
            {   52, MouseButton::ExtraButton16 },
            {   53, MouseButton::ExtraButton17 },
            {   54, MouseButton::ExtraButton18 },
            {   55, MouseButton::ExtraButton19 },
            {   56, MouseButton::ExtraButton20 },
            {   57, MouseButton::ExtraButton21 },
            {   58, MouseButton::ExtraButton22 },
            {   59, MouseButton::ExtraButton23 },
            {   60, MouseButton::ExtraButton24 },
            {   61, MouseButton::AllButtons },
            {   62, MouseButton::MaxMouseButton },
            {   63, MouseButton::MouseButtonMask },
        }),
        // enum 'Orientation'
        QtMocHelpers::EnumData<Orientation>(64, 64, QMC::EnumFlags{}).add({
            {   65, Orientation::Horizontal },
            {   66, Orientation::Vertical },
        }),
        // enum 'Orientations'
        QtMocHelpers::EnumData<Orientations>(67, 64, QMC::EnumFlags{}).add({
            {   65, Orientation::Horizontal },
            {   66, Orientation::Vertical },
        }),
        // enum 'FocusPolicy'
        QtMocHelpers::EnumData<FocusPolicy>(68, 68, QMC::EnumFlags{}).add({
            {   69, FocusPolicy::NoFocus },
            {   70, FocusPolicy::TabFocus },
            {   71, FocusPolicy::ClickFocus },
            {   72, FocusPolicy::StrongFocus },
            {   73, FocusPolicy::WheelFocus },
        }),
        // enum 'TabFocusBehavior'
        QtMocHelpers::EnumData<TabFocusBehavior>(74, 74, QMC::EnumFlags{}).add({
            {   75, TabFocusBehavior::NoTabFocus },
            {   76, TabFocusBehavior::TabFocusTextControls },
            {   77, TabFocusBehavior::TabFocusListControls },
            {   78, TabFocusBehavior::TabFocusAllControls },
        }),
        // enum 'SortOrder'
        QtMocHelpers::EnumData<SortOrder>(79, 79, QMC::EnumFlags{}).add({
            {   80, SortOrder::AscendingOrder },
            {   81, SortOrder::DescendingOrder },
        }),
        // enum 'SplitBehavior'
        QtMocHelpers::EnumData<SplitBehavior>(82, 83, QMC::EnumFlags{}).add({
            {   84, SplitBehaviorFlags::KeepEmptyParts },
            {   85, SplitBehaviorFlags::SkipEmptyParts },
        }),
        // enum 'Alignment'
        QtMocHelpers::EnumData<Alignment>(86, 87, QMC::EnumFlags{}).add({
            {   88, AlignmentFlag::AlignLeft },
            {   89, AlignmentFlag::AlignLeading },
            {   90, AlignmentFlag::AlignRight },
            {   91, AlignmentFlag::AlignTrailing },
            {   92, AlignmentFlag::AlignHCenter },
            {   93, AlignmentFlag::AlignJustify },
            {   94, AlignmentFlag::AlignAbsolute },
            {   95, AlignmentFlag::AlignHorizontal_Mask },
            {   96, AlignmentFlag::AlignTop },
            {   97, AlignmentFlag::AlignBottom },
            {   98, AlignmentFlag::AlignVCenter },
            {   99, AlignmentFlag::AlignBaseline },
            {  100, AlignmentFlag::AlignVertical_Mask },
            {  101, AlignmentFlag::AlignCenter },
        }),
        // enum 'TextFlag'
        QtMocHelpers::EnumData<TextFlag>(102, 102, QMC::EnumFlags{}).add({
            {  103, TextFlag::TextSingleLine },
            {  104, TextFlag::TextDontClip },
            {  105, TextFlag::TextExpandTabs },
            {  106, TextFlag::TextShowMnemonic },
            {  107, TextFlag::TextWordWrap },
            {  108, TextFlag::TextWrapAnywhere },
            {  109, TextFlag::TextDontPrint },
            {  110, TextFlag::TextIncludeTrailingSpaces },
            {  111, TextFlag::TextHideMnemonic },
            {  112, TextFlag::TextJustificationForced },
            {  113, TextFlag::TextForceLeftToRight },
            {  114, TextFlag::TextForceRightToLeft },
            {  115, TextFlag::TextLongestVariant },
        }),
        // enum 'TextElideMode'
        QtMocHelpers::EnumData<TextElideMode>(116, 116, QMC::EnumFlags{}).add({
            {  117, TextElideMode::ElideLeft },
            {  118, TextElideMode::ElideRight },
            {  119, TextElideMode::ElideMiddle },
            {  120, TextElideMode::ElideNone },
        }),
        // enum 'WindowType'
        QtMocHelpers::EnumData<WindowType>(121, 121, QMC::EnumFlags{}).add({
            {  122, WindowType::Widget },
            {  123, WindowType::Window },
            {  124, WindowType::Dialog },
            {  125, WindowType::Sheet },
            {  126, WindowType::Drawer },
            {  127, WindowType::Popup },
            {  128, WindowType::Tool },
            {  129, WindowType::ToolTip },
            {  130, WindowType::SplashScreen },
            {  131, WindowType::Desktop },
            {  132, WindowType::SubWindow },
            {  133, WindowType::ForeignWindow },
            {  134, WindowType::CoverWindow },
            {  135, WindowType::WindowType_Mask },
            {  136, WindowType::MSWindowsFixedSizeDialogHint },
            {  137, WindowType::MSWindowsOwnDC },
            {  138, WindowType::BypassWindowManagerHint },
            {  139, WindowType::X11BypassWindowManagerHint },
            {  140, WindowType::FramelessWindowHint },
            {  141, WindowType::WindowTitleHint },
            {  142, WindowType::WindowSystemMenuHint },
            {  143, WindowType::WindowMinimizeButtonHint },
            {  144, WindowType::WindowMaximizeButtonHint },
            {  145, WindowType::WindowMinMaxButtonsHint },
            {  146, WindowType::WindowContextHelpButtonHint },
            {  147, WindowType::WindowShadeButtonHint },
            {  148, WindowType::WindowStaysOnTopHint },
            {  149, WindowType::WindowTransparentForInput },
            {  150, WindowType::WindowOverridesSystemGestures },
            {  151, WindowType::WindowDoesNotAcceptFocus },
            {  152, WindowType::MaximizeUsingFullscreenGeometryHint },
            {  153, WindowType::ExpandedClientAreaHint },
            {  154, WindowType::NoTitleBarBackgroundHint },
            {  155, WindowType::CustomizeWindowHint },
            {  156, WindowType::WindowStaysOnBottomHint },
            {  157, WindowType::WindowCloseButtonHint },
            {  158, WindowType::MacWindowToolBarButtonHint },
            {  159, WindowType::BypassGraphicsProxyWidget },
            {  160, WindowType::NoDropShadowWindowHint },
            {  161, WindowType::WindowFullscreenButtonHint },
        }),
        // enum 'WindowFlags'
        QtMocHelpers::EnumData<WindowFlags>(162, 121, QMC::EnumFlags{}).add({
            {  122, WindowType::Widget },
            {  123, WindowType::Window },
            {  124, WindowType::Dialog },
            {  125, WindowType::Sheet },
            {  126, WindowType::Drawer },
            {  127, WindowType::Popup },
            {  128, WindowType::Tool },
            {  129, WindowType::ToolTip },
            {  130, WindowType::SplashScreen },
            {  131, WindowType::Desktop },
            {  132, WindowType::SubWindow },
            {  133, WindowType::ForeignWindow },
            {  134, WindowType::CoverWindow },
            {  135, WindowType::WindowType_Mask },
            {  136, WindowType::MSWindowsFixedSizeDialogHint },
            {  137, WindowType::MSWindowsOwnDC },
            {  138, WindowType::BypassWindowManagerHint },
            {  139, WindowType::X11BypassWindowManagerHint },
            {  140, WindowType::FramelessWindowHint },
            {  141, WindowType::WindowTitleHint },
            {  142, WindowType::WindowSystemMenuHint },
            {  143, WindowType::WindowMinimizeButtonHint },
            {  144, WindowType::WindowMaximizeButtonHint },
            {  145, WindowType::WindowMinMaxButtonsHint },
            {  146, WindowType::WindowContextHelpButtonHint },
            {  147, WindowType::WindowShadeButtonHint },
            {  148, WindowType::WindowStaysOnTopHint },
            {  149, WindowType::WindowTransparentForInput },
            {  150, WindowType::WindowOverridesSystemGestures },
            {  151, WindowType::WindowDoesNotAcceptFocus },
            {  152, WindowType::MaximizeUsingFullscreenGeometryHint },
            {  153, WindowType::ExpandedClientAreaHint },
            {  154, WindowType::NoTitleBarBackgroundHint },
            {  155, WindowType::CustomizeWindowHint },
            {  156, WindowType::WindowStaysOnBottomHint },
            {  157, WindowType::WindowCloseButtonHint },
            {  158, WindowType::MacWindowToolBarButtonHint },
            {  159, WindowType::BypassGraphicsProxyWidget },
            {  160, WindowType::NoDropShadowWindowHint },
            {  161, WindowType::WindowFullscreenButtonHint },
        }),
        // enum 'WindowState'
        QtMocHelpers::EnumData<WindowState>(163, 163, QMC::EnumFlags{}).add({
            {  164, WindowState::WindowNoState },
            {  165, WindowState::WindowMinimized },
            {  166, WindowState::WindowMaximized },
            {  167, WindowState::WindowFullScreen },
            {  168, WindowState::WindowActive },
        }),
        // enum 'WindowStates'
        QtMocHelpers::EnumData<WindowStates>(169, 163, QMC::EnumFlags{}).add({
            {  164, WindowState::WindowNoState },
            {  165, WindowState::WindowMinimized },
            {  166, WindowState::WindowMaximized },
            {  167, WindowState::WindowFullScreen },
            {  168, WindowState::WindowActive },
        }),
        // enum 'ApplicationState'
        QtMocHelpers::EnumData<ApplicationState>(170, 170, QMC::EnumFlags{}).add({
            {  171, ApplicationState::ApplicationSuspended },
            {  172, ApplicationState::ApplicationHidden },
            {  173, ApplicationState::ApplicationInactive },
            {  174, ApplicationState::ApplicationActive },
        }),
        // enum 'ScreenOrientation'
        QtMocHelpers::EnumData<ScreenOrientation>(175, 175, QMC::EnumFlags{}).add({
            {  176, ScreenOrientation::PrimaryOrientation },
            {  177, ScreenOrientation::PortraitOrientation },
            {  178, ScreenOrientation::LandscapeOrientation },
            {  179, ScreenOrientation::InvertedPortraitOrientation },
            {  180, ScreenOrientation::InvertedLandscapeOrientation },
        }),
        // enum 'ScreenOrientations'
        QtMocHelpers::EnumData<ScreenOrientations>(181, 175, QMC::EnumFlags{}).add({
            {  176, ScreenOrientation::PrimaryOrientation },
            {  177, ScreenOrientation::PortraitOrientation },
            {  178, ScreenOrientation::LandscapeOrientation },
            {  179, ScreenOrientation::InvertedPortraitOrientation },
            {  180, ScreenOrientation::InvertedLandscapeOrientation },
        }),
        // enum 'WidgetAttribute'
        QtMocHelpers::EnumData<WidgetAttribute>(182, 182, QMC::EnumFlags{}).add({
            {  183, WidgetAttribute::WA_Disabled },
            {  184, WidgetAttribute::WA_UnderMouse },
            {  185, WidgetAttribute::WA_MouseTracking },
            {  186, WidgetAttribute::WA_OpaquePaintEvent },
            {  187, WidgetAttribute::WA_StaticContents },
            {  188, WidgetAttribute::WA_LaidOut },
            {  189, WidgetAttribute::WA_PaintOnScreen },
            {  190, WidgetAttribute::WA_NoSystemBackground },
            {  191, WidgetAttribute::WA_UpdatesDisabled },
            {  192, WidgetAttribute::WA_Mapped },
            {  193, WidgetAttribute::WA_InputMethodEnabled },
            {  194, WidgetAttribute::WA_WState_Visible },
            {  195, WidgetAttribute::WA_WState_Hidden },
            {  196, WidgetAttribute::WA_ForceDisabled },
            {  197, WidgetAttribute::WA_KeyCompression },
            {  198, WidgetAttribute::WA_PendingMoveEvent },
            {  199, WidgetAttribute::WA_PendingResizeEvent },
            {  200, WidgetAttribute::WA_SetPalette },
            {  201, WidgetAttribute::WA_SetFont },
            {  202, WidgetAttribute::WA_SetCursor },
            {  203, WidgetAttribute::WA_NoChildEventsFromChildren },
            {  204, WidgetAttribute::WA_WindowModified },
            {  205, WidgetAttribute::WA_Resized },
            {  206, WidgetAttribute::WA_Moved },
            {  207, WidgetAttribute::WA_PendingUpdate },
            {  208, WidgetAttribute::WA_InvalidSize },
            {  209, WidgetAttribute::WA_CustomWhatsThis },
            {  210, WidgetAttribute::WA_LayoutOnEntireRect },
            {  211, WidgetAttribute::WA_OutsideWSRange },
            {  212, WidgetAttribute::WA_GrabbedShortcut },
            {  213, WidgetAttribute::WA_TransparentForMouseEvents },
            {  214, WidgetAttribute::WA_PaintUnclipped },
            {  215, WidgetAttribute::WA_SetWindowIcon },
            {  216, WidgetAttribute::WA_NoMouseReplay },
            {  217, WidgetAttribute::WA_DeleteOnClose },
            {  218, WidgetAttribute::WA_RightToLeft },
            {  219, WidgetAttribute::WA_SetLayoutDirection },
            {  220, WidgetAttribute::WA_NoChildEventsForParent },
            {  221, WidgetAttribute::WA_ForceUpdatesDisabled },
            {  222, WidgetAttribute::WA_WState_Created },
            {  223, WidgetAttribute::WA_WState_CompressKeys },
            {  224, WidgetAttribute::WA_WState_InPaintEvent },
            {  225, WidgetAttribute::WA_WState_Reparented },
            {  226, WidgetAttribute::WA_WState_ConfigPending },
            {  227, WidgetAttribute::WA_WState_Polished },
            {  228, WidgetAttribute::WA_WState_OwnSizePolicy },
            {  229, WidgetAttribute::WA_WState_ExplicitShowHide },
            {  230, WidgetAttribute::WA_ShowModal },
            {  231, WidgetAttribute::WA_MouseNoMask },
            {  232, WidgetAttribute::WA_NoMousePropagation },
            {  233, WidgetAttribute::WA_Hover },
            {  234, WidgetAttribute::WA_InputMethodTransparent },
            {  235, WidgetAttribute::WA_QuitOnClose },
            {  236, WidgetAttribute::WA_KeyboardFocusChange },
            {  237, WidgetAttribute::WA_AcceptDrops },
            {  238, WidgetAttribute::WA_DropSiteRegistered },
            {  239, WidgetAttribute::WA_WindowPropagation },
            {  240, WidgetAttribute::WA_NoX11EventCompression },
            {  241, WidgetAttribute::WA_TintedBackground },
            {  242, WidgetAttribute::WA_X11OpenGLOverlay },
            {  243, WidgetAttribute::WA_AlwaysShowToolTips },
            {  244, WidgetAttribute::WA_MacOpaqueSizeGrip },
            {  245, WidgetAttribute::WA_SetStyle },
            {  246, WidgetAttribute::WA_SetLocale },
            {  247, WidgetAttribute::WA_MacShowFocusRect },
            {  248, WidgetAttribute::WA_MacNormalSize },
            {  249, WidgetAttribute::WA_MacSmallSize },
            {  250, WidgetAttribute::WA_MacMiniSize },
            {  251, WidgetAttribute::WA_LayoutUsesWidgetRect },
            {  252, WidgetAttribute::WA_StyledBackground },
            {  253, WidgetAttribute::WA_CanHostQMdiSubWindowTitleBar },
            {  254, WidgetAttribute::WA_MacAlwaysShowToolWindow },
            {  255, WidgetAttribute::WA_StyleSheet },
            {  256, WidgetAttribute::WA_ShowWithoutActivating },
            {  257, WidgetAttribute::WA_X11BypassTransientForHint },
            {  258, WidgetAttribute::WA_NativeWindow },
            {  259, WidgetAttribute::WA_DontCreateNativeAncestors },
            {  260, WidgetAttribute::WA_DontShowOnScreen },
            {  261, WidgetAttribute::WA_X11NetWmWindowTypeDesktop },
            {  262, WidgetAttribute::WA_X11NetWmWindowTypeDock },
            {  263, WidgetAttribute::WA_X11NetWmWindowTypeToolBar },
            {  264, WidgetAttribute::WA_X11NetWmWindowTypeMenu },
            {  265, WidgetAttribute::WA_X11NetWmWindowTypeUtility },
            {  266, WidgetAttribute::WA_X11NetWmWindowTypeSplash },
            {  267, WidgetAttribute::WA_X11NetWmWindowTypeDialog },
            {  268, WidgetAttribute::WA_X11NetWmWindowTypeDropDownMenu },
            {  269, WidgetAttribute::WA_X11NetWmWindowTypePopupMenu },
            {  270, WidgetAttribute::WA_X11NetWmWindowTypeToolTip },
            {  271, WidgetAttribute::WA_X11NetWmWindowTypeNotification },
            {  272, WidgetAttribute::WA_X11NetWmWindowTypeCombo },
            {  273, WidgetAttribute::WA_X11NetWmWindowTypeDND },
            {  274, WidgetAttribute::WA_SetWindowModality },
            {  275, WidgetAttribute::WA_WState_WindowOpacitySet },
            {  276, WidgetAttribute::WA_TranslucentBackground },
            {  277, WidgetAttribute::WA_AcceptTouchEvents },
            {  278, WidgetAttribute::WA_WState_AcceptedTouchBeginEvent },
            {  279, WidgetAttribute::WA_TouchPadAcceptSingleTouchEvents },
            {  280, WidgetAttribute::WA_X11DoNotAcceptFocus },
            {  281, WidgetAttribute::WA_AlwaysStackOnTop },
            {  282, WidgetAttribute::WA_TabletTracking },
            {  283, WidgetAttribute::WA_ContentsMarginsRespectsSafeArea },
            {  284, WidgetAttribute::WA_StyleSheetTarget },
            {  285, WidgetAttribute::WA_AttributeCount },
        }),
        // enum 'ApplicationAttribute'
        QtMocHelpers::EnumData<ApplicationAttribute>(286, 286, QMC::EnumFlags{}).add({
            {  287, ApplicationAttribute::AA_QtQuickUseDefaultSizePolicy },
            {  288, ApplicationAttribute::AA_DontShowIconsInMenus },
            {  289, ApplicationAttribute::AA_NativeWindows },
            {  290, ApplicationAttribute::AA_DontCreateNativeWidgetSiblings },
            {  291, ApplicationAttribute::AA_PluginApplication },
            {  292, ApplicationAttribute::AA_DontUseNativeMenuBar },
            {  293, ApplicationAttribute::AA_MacDontSwapCtrlAndMeta },
            {  294, ApplicationAttribute::AA_Use96Dpi },
            {  295, ApplicationAttribute::AA_DisableNativeVirtualKeyboard },
            {  296, ApplicationAttribute::AA_DontUseNativeMenuWindows },
            {  297, ApplicationAttribute::AA_SynthesizeTouchForUnhandledMouseEvents },
            {  298, ApplicationAttribute::AA_SynthesizeMouseForUnhandledTouchEvents },
            {  299, ApplicationAttribute::AA_UseHighDpiPixmaps },
            {  300, ApplicationAttribute::AA_ForceRasterWidgets },
            {  301, ApplicationAttribute::AA_UseDesktopOpenGL },
            {  302, ApplicationAttribute::AA_UseOpenGLES },
            {  303, ApplicationAttribute::AA_UseSoftwareOpenGL },
            {  304, ApplicationAttribute::AA_ShareOpenGLContexts },
            {  305, ApplicationAttribute::AA_SetPalette },
            {  306, ApplicationAttribute::AA_EnableHighDpiScaling },
            {  307, ApplicationAttribute::AA_DisableHighDpiScaling },
            {  308, ApplicationAttribute::AA_UseStyleSheetPropagationInWidgetStyles },
            {  309, ApplicationAttribute::AA_DontUseNativeDialogs },
            {  310, ApplicationAttribute::AA_SynthesizeMouseForUnhandledTabletEvents },
            {  311, ApplicationAttribute::AA_CompressHighFrequencyEvents },
            {  312, ApplicationAttribute::AA_DontCheckOpenGLContextThreadAffinity },
            {  313, ApplicationAttribute::AA_DisableShaderDiskCache },
            {  314, ApplicationAttribute::AA_DontShowShortcutsInContextMenus },
            {  315, ApplicationAttribute::AA_CompressTabletEvents },
            {  316, ApplicationAttribute::AA_DisableSessionManager },
            {  317, ApplicationAttribute::AA_AttributeCount },
        }),
        // enum 'ImageConversionFlags'
        QtMocHelpers::EnumData<ImageConversionFlags>(318, 319, QMC::EnumFlags{}).add({
            {  320, ImageConversionFlag::ColorMode_Mask },
            {  321, ImageConversionFlag::AutoColor },
            {  322, ImageConversionFlag::ColorOnly },
            {  323, ImageConversionFlag::MonoOnly },
            {  324, ImageConversionFlag::AlphaDither_Mask },
            {  325, ImageConversionFlag::ThresholdAlphaDither },
            {  326, ImageConversionFlag::OrderedAlphaDither },
            {  327, ImageConversionFlag::DiffuseAlphaDither },
            {  328, ImageConversionFlag::NoAlpha },
            {  329, ImageConversionFlag::Dither_Mask },
            {  330, ImageConversionFlag::DiffuseDither },
            {  331, ImageConversionFlag::OrderedDither },
            {  332, ImageConversionFlag::ThresholdDither },
            {  333, ImageConversionFlag::DitherMode_Mask },
            {  334, ImageConversionFlag::AutoDither },
            {  335, ImageConversionFlag::PreferDither },
            {  336, ImageConversionFlag::AvoidDither },
            {  337, ImageConversionFlag::NoOpaqueDetection },
            {  338, ImageConversionFlag::NoFormatConversion },
        }),
        // enum 'BGMode'
        QtMocHelpers::EnumData<BGMode>(339, 339, QMC::EnumFlags{}).add({
            {  340, BGMode::TransparentMode },
            {  341, BGMode::OpaqueMode },
        }),
        // enum 'Key'
        QtMocHelpers::EnumData<Key>(342, 342, QMC::EnumFlags{}).add({
            {  343, Key::Key_Space },
            {  344, Key::Key_Any },
            {  345, Key::Key_Exclam },
            {  346, Key::Key_QuoteDbl },
            {  347, Key::Key_NumberSign },
            {  348, Key::Key_Dollar },
            {  349, Key::Key_Percent },
            {  350, Key::Key_Ampersand },
            {  351, Key::Key_Apostrophe },
            {  352, Key::Key_ParenLeft },
            {  353, Key::Key_ParenRight },
            {  354, Key::Key_Asterisk },
            {  355, Key::Key_Plus },
            {  356, Key::Key_Comma },
            {  357, Key::Key_Minus },
            {  358, Key::Key_Period },
            {  359, Key::Key_Slash },
            {  360, Key::Key_0 },
            {  361, Key::Key_1 },
            {  362, Key::Key_2 },
            {  363, Key::Key_3 },
            {  364, Key::Key_4 },
            {  365, Key::Key_5 },
            {  366, Key::Key_6 },
            {  367, Key::Key_7 },
            {  368, Key::Key_8 },
            {  369, Key::Key_9 },
            {  370, Key::Key_Colon },
            {  371, Key::Key_Semicolon },
            {  372, Key::Key_Less },
            {  373, Key::Key_Equal },
            {  374, Key::Key_Greater },
            {  375, Key::Key_Question },
            {  376, Key::Key_At },
            {  377, Key::Key_A },
            {  378, Key::Key_B },
            {  379, Key::Key_C },
            {  380, Key::Key_D },
            {  381, Key::Key_E },
            {  382, Key::Key_F },
            {  383, Key::Key_G },
            {  384, Key::Key_H },
            {  385, Key::Key_I },
            {  386, Key::Key_J },
            {  387, Key::Key_K },
            {  388, Key::Key_L },
            {  389, Key::Key_M },
            {  390, Key::Key_N },
            {  391, Key::Key_O },
            {  392, Key::Key_P },
            {  393, Key::Key_Q },
            {  394, Key::Key_R },
            {  395, Key::Key_S },
            {  396, Key::Key_T },
            {  397, Key::Key_U },
            {  398, Key::Key_V },
            {  399, Key::Key_W },
            {  400, Key::Key_X },
            {  401, Key::Key_Y },
            {  402, Key::Key_Z },
            {  403, Key::Key_BracketLeft },
            {  404, Key::Key_Backslash },
            {  405, Key::Key_BracketRight },
            {  406, Key::Key_AsciiCircum },
            {  407, Key::Key_Underscore },
            {  408, Key::Key_QuoteLeft },
            {  409, Key::Key_BraceLeft },
            {  410, Key::Key_Bar },
            {  411, Key::Key_BraceRight },
            {  412, Key::Key_AsciiTilde },
            {  413, Key::Key_nobreakspace },
            {  414, Key::Key_exclamdown },
            {  415, Key::Key_cent },
            {  416, Key::Key_sterling },
            {  417, Key::Key_currency },
            {  418, Key::Key_yen },
            {  419, Key::Key_brokenbar },
            {  420, Key::Key_section },
            {  421, Key::Key_diaeresis },
            {  422, Key::Key_copyright },
            {  423, Key::Key_ordfeminine },
            {  424, Key::Key_guillemotleft },
            {  425, Key::Key_notsign },
            {  426, Key::Key_hyphen },
            {  427, Key::Key_registered },
            {  428, Key::Key_macron },
            {  429, Key::Key_degree },
            {  430, Key::Key_plusminus },
            {  431, Key::Key_twosuperior },
            {  432, Key::Key_threesuperior },
            {  433, Key::Key_acute },
            {  434, Key::Key_micro },
            {  435, Key::Key_mu },
            {  436, Key::Key_paragraph },
            {  437, Key::Key_periodcentered },
            {  438, Key::Key_cedilla },
            {  439, Key::Key_onesuperior },
            {  440, Key::Key_masculine },
            {  441, Key::Key_guillemotright },
            {  442, Key::Key_onequarter },
            {  443, Key::Key_onehalf },
            {  444, Key::Key_threequarters },
            {  445, Key::Key_questiondown },
            {  446, Key::Key_Agrave },
            {  447, Key::Key_Aacute },
            {  448, Key::Key_Acircumflex },
            {  449, Key::Key_Atilde },
            {  450, Key::Key_Adiaeresis },
            {  451, Key::Key_Aring },
            {  452, Key::Key_AE },
            {  453, Key::Key_Ccedilla },
            {  454, Key::Key_Egrave },
            {  455, Key::Key_Eacute },
            {  456, Key::Key_Ecircumflex },
            {  457, Key::Key_Ediaeresis },
            {  458, Key::Key_Igrave },
            {  459, Key::Key_Iacute },
            {  460, Key::Key_Icircumflex },
            {  461, Key::Key_Idiaeresis },
            {  462, Key::Key_ETH },
            {  463, Key::Key_Ntilde },
            {  464, Key::Key_Ograve },
            {  465, Key::Key_Oacute },
            {  466, Key::Key_Ocircumflex },
            {  467, Key::Key_Otilde },
            {  468, Key::Key_Odiaeresis },
            {  469, Key::Key_multiply },
            {  470, Key::Key_Ooblique },
            {  471, Key::Key_Ugrave },
            {  472, Key::Key_Uacute },
            {  473, Key::Key_Ucircumflex },
            {  474, Key::Key_Udiaeresis },
            {  475, Key::Key_Yacute },
            {  476, Key::Key_THORN },
            {  477, Key::Key_ssharp },
            {  478, Key::Key_division },
            {  479, Key::Key_ydiaeresis },
            {  480, Key::Key_Escape },
            {  481, Key::Key_Tab },
            {  482, Key::Key_Backtab },
            {  483, Key::Key_Backspace },
            {  484, Key::Key_Return },
            {  485, Key::Key_Enter },
            {  486, Key::Key_Insert },
            {  487, Key::Key_Delete },
            {  488, Key::Key_Pause },
            {  489, Key::Key_Print },
            {  490, Key::Key_SysReq },
            {  491, Key::Key_Clear },
            {  492, Key::Key_Home },
            {  493, Key::Key_End },
            {  494, Key::Key_Left },
            {  495, Key::Key_Up },
            {  496, Key::Key_Right },
            {  497, Key::Key_Down },
            {  498, Key::Key_PageUp },
            {  499, Key::Key_PageDown },
            {  500, Key::Key_Shift },
            {  501, Key::Key_Control },
            {  502, Key::Key_Meta },
            {  503, Key::Key_Alt },
            {  504, Key::Key_CapsLock },
            {  505, Key::Key_NumLock },
            {  506, Key::Key_ScrollLock },
            {  507, Key::Key_F1 },
            {  508, Key::Key_F2 },
            {  509, Key::Key_F3 },
            {  510, Key::Key_F4 },
            {  511, Key::Key_F5 },
            {  512, Key::Key_F6 },
            {  513, Key::Key_F7 },
            {  514, Key::Key_F8 },
            {  515, Key::Key_F9 },
            {  516, Key::Key_F10 },
            {  517, Key::Key_F11 },
            {  518, Key::Key_F12 },
            {  519, Key::Key_F13 },
            {  520, Key::Key_F14 },
            {  521, Key::Key_F15 },
            {  522, Key::Key_F16 },
            {  523, Key::Key_F17 },
            {  524, Key::Key_F18 },
            {  525, Key::Key_F19 },
            {  526, Key::Key_F20 },
            {  527, Key::Key_F21 },
            {  528, Key::Key_F22 },
            {  529, Key::Key_F23 },
            {  530, Key::Key_F24 },
            {  531, Key::Key_F25 },
            {  532, Key::Key_F26 },
            {  533, Key::Key_F27 },
            {  534, Key::Key_F28 },
            {  535, Key::Key_F29 },
            {  536, Key::Key_F30 },
            {  537, Key::Key_F31 },
            {  538, Key::Key_F32 },
            {  539, Key::Key_F33 },
            {  540, Key::Key_F34 },
            {  541, Key::Key_F35 },
            {  542, Key::Key_Super_L },
            {  543, Key::Key_Super_R },
            {  544, Key::Key_Menu },
            {  545, Key::Key_Hyper_L },
            {  546, Key::Key_Hyper_R },
            {  547, Key::Key_Help },
            {  548, Key::Key_Direction_L },
            {  549, Key::Key_Direction_R },
            {  550, Key::Key_AltGr },
            {  551, Key::Key_Multi_key },
            {  552, Key::Key_Codeinput },
            {  553, Key::Key_SingleCandidate },
            {  554, Key::Key_MultipleCandidate },
            {  555, Key::Key_PreviousCandidate },
            {  556, Key::Key_Mode_switch },
            {  557, Key::Key_Kanji },
            {  558, Key::Key_Muhenkan },
            {  559, Key::Key_Henkan },
            {  560, Key::Key_Romaji },
            {  561, Key::Key_Hiragana },
            {  562, Key::Key_Katakana },
            {  563, Key::Key_Hiragana_Katakana },
            {  564, Key::Key_Zenkaku },
            {  565, Key::Key_Hankaku },
            {  566, Key::Key_Zenkaku_Hankaku },
            {  567, Key::Key_Touroku },
            {  568, Key::Key_Massyo },
            {  569, Key::Key_Kana_Lock },
            {  570, Key::Key_Kana_Shift },
            {  571, Key::Key_Eisu_Shift },
            {  572, Key::Key_Eisu_toggle },
            {  573, Key::Key_Hangul },
            {  574, Key::Key_Hangul_Start },
            {  575, Key::Key_Hangul_End },
            {  576, Key::Key_Hangul_Hanja },
            {  577, Key::Key_Hangul_Jamo },
            {  578, Key::Key_Hangul_Romaja },
            {  579, Key::Key_Hangul_Jeonja },
            {  580, Key::Key_Hangul_Banja },
            {  581, Key::Key_Hangul_PreHanja },
            {  582, Key::Key_Hangul_PostHanja },
            {  583, Key::Key_Hangul_Special },
            {  584, Key::Key_Dead_Grave },
            {  585, Key::Key_Dead_Acute },
            {  586, Key::Key_Dead_Circumflex },
            {  587, Key::Key_Dead_Tilde },
            {  588, Key::Key_Dead_Macron },
            {  589, Key::Key_Dead_Breve },
            {  590, Key::Key_Dead_Abovedot },
            {  591, Key::Key_Dead_Diaeresis },
            {  592, Key::Key_Dead_Abovering },
            {  593, Key::Key_Dead_Doubleacute },
            {  594, Key::Key_Dead_Caron },
            {  595, Key::Key_Dead_Cedilla },
            {  596, Key::Key_Dead_Ogonek },
            {  597, Key::Key_Dead_Iota },
            {  598, Key::Key_Dead_Voiced_Sound },
            {  599, Key::Key_Dead_Semivoiced_Sound },
            {  600, Key::Key_Dead_Belowdot },
            {  601, Key::Key_Dead_Hook },
            {  602, Key::Key_Dead_Horn },
            {  603, Key::Key_Dead_Stroke },
            {  604, Key::Key_Dead_Abovecomma },
            {  605, Key::Key_Dead_Abovereversedcomma },
            {  606, Key::Key_Dead_Doublegrave },
            {  607, Key::Key_Dead_Belowring },
            {  608, Key::Key_Dead_Belowmacron },
            {  609, Key::Key_Dead_Belowcircumflex },
            {  610, Key::Key_Dead_Belowtilde },
            {  611, Key::Key_Dead_Belowbreve },
            {  612, Key::Key_Dead_Belowdiaeresis },
            {  613, Key::Key_Dead_Invertedbreve },
            {  614, Key::Key_Dead_Belowcomma },
            {  615, Key::Key_Dead_Currency },
            {  616, Key::Key_Dead_a },
            {  617, Key::Key_Dead_A },
            {  618, Key::Key_Dead_e },
            {  619, Key::Key_Dead_E },
            {  620, Key::Key_Dead_i },
            {  621, Key::Key_Dead_I },
            {  622, Key::Key_Dead_o },
            {  623, Key::Key_Dead_O },
            {  624, Key::Key_Dead_u },
            {  625, Key::Key_Dead_U },
            {  626, Key::Key_Dead_Small_Schwa },
            {  627, Key::Key_Dead_Capital_Schwa },
            {  628, Key::Key_Dead_Greek },
            {  629, Key::Key_Dead_Lowline },
            {  630, Key::Key_Dead_Aboveverticalline },
            {  631, Key::Key_Dead_Belowverticalline },
            {  632, Key::Key_Dead_Longsolidusoverlay },
            {  633, Key::Key_Back },
            {  634, Key::Key_Forward },
            {  635, Key::Key_Stop },
            {  636, Key::Key_Refresh },
            {  637, Key::Key_VolumeDown },
            {  638, Key::Key_VolumeMute },
            {  639, Key::Key_VolumeUp },
            {  640, Key::Key_BassBoost },
            {  641, Key::Key_BassUp },
            {  642, Key::Key_BassDown },
            {  643, Key::Key_TrebleUp },
            {  644, Key::Key_TrebleDown },
            {  645, Key::Key_MediaPlay },
            {  646, Key::Key_MediaStop },
            {  647, Key::Key_MediaPrevious },
            {  648, Key::Key_MediaNext },
            {  649, Key::Key_MediaRecord },
            {  650, Key::Key_MediaPause },
            {  651, Key::Key_MediaTogglePlayPause },
            {  652, Key::Key_HomePage },
            {  653, Key::Key_Favorites },
            {  654, Key::Key_Search },
            {  655, Key::Key_Standby },
            {  656, Key::Key_OpenUrl },
            {  657, Key::Key_LaunchMail },
            {  658, Key::Key_LaunchMedia },
            {  659, Key::Key_Launch0 },
            {  660, Key::Key_Launch1 },
            {  661, Key::Key_Launch2 },
            {  662, Key::Key_Launch3 },
            {  663, Key::Key_Launch4 },
            {  664, Key::Key_Launch5 },
            {  665, Key::Key_Launch6 },
            {  666, Key::Key_Launch7 },
            {  667, Key::Key_Launch8 },
            {  668, Key::Key_Launch9 },
            {  669, Key::Key_LaunchA },
            {  670, Key::Key_LaunchB },
            {  671, Key::Key_LaunchC },
            {  672, Key::Key_LaunchD },
            {  673, Key::Key_LaunchE },
            {  674, Key::Key_LaunchF },
            {  675, Key::Key_MonBrightnessUp },
            {  676, Key::Key_MonBrightnessDown },
            {  677, Key::Key_KeyboardLightOnOff },
            {  678, Key::Key_KeyboardBrightnessUp },
            {  679, Key::Key_KeyboardBrightnessDown },
            {  680, Key::Key_PowerOff },
            {  681, Key::Key_WakeUp },
            {  682, Key::Key_Eject },
            {  683, Key::Key_ScreenSaver },
            {  684, Key::Key_WWW },
            {  685, Key::Key_Memo },
            {  686, Key::Key_LightBulb },
            {  687, Key::Key_Shop },
            {  688, Key::Key_History },
            {  689, Key::Key_AddFavorite },
            {  690, Key::Key_HotLinks },
            {  691, Key::Key_BrightnessAdjust },
            {  692, Key::Key_Finance },
            {  693, Key::Key_Community },
            {  694, Key::Key_AudioRewind },
            {  695, Key::Key_BackForward },
            {  696, Key::Key_ApplicationLeft },
            {  697, Key::Key_ApplicationRight },
            {  698, Key::Key_Book },
            {  699, Key::Key_CD },
            {  700, Key::Key_Calculator },
            {  701, Key::Key_ToDoList },
            {  702, Key::Key_ClearGrab },
            {  703, Key::Key_Close },
            {  704, Key::Key_Copy },
            {  705, Key::Key_Cut },
            {  706, Key::Key_Display },
            {  707, Key::Key_DOS },
            {  708, Key::Key_Documents },
            {  709, Key::Key_Excel },
            {  710, Key::Key_Explorer },
            {  711, Key::Key_Game },
            {  712, Key::Key_Go },
            {  713, Key::Key_iTouch },
            {  714, Key::Key_LogOff },
            {  715, Key::Key_Market },
            {  716, Key::Key_Meeting },
            {  717, Key::Key_MenuKB },
            {  718, Key::Key_MenuPB },
            {  719, Key::Key_MySites },
            {  720, Key::Key_News },
            {  721, Key::Key_OfficeHome },
            {  722, Key::Key_Option },
            {  723, Key::Key_Paste },
            {  724, Key::Key_Phone },
            {  725, Key::Key_Calendar },
            {  726, Key::Key_Reply },
            {  727, Key::Key_Reload },
            {  728, Key::Key_RotateWindows },
            {  729, Key::Key_RotationPB },
            {  730, Key::Key_RotationKB },
            {  731, Key::Key_Save },
            {  732, Key::Key_Send },
            {  733, Key::Key_Spell },
            {  734, Key::Key_SplitScreen },
            {  735, Key::Key_Support },
            {  736, Key::Key_TaskPane },
            {  737, Key::Key_Terminal },
            {  738, Key::Key_Tools },
            {  739, Key::Key_Travel },
            {  740, Key::Key_Video },
            {  741, Key::Key_Word },
            {  742, Key::Key_Xfer },
            {  743, Key::Key_ZoomIn },
            {  744, Key::Key_ZoomOut },
            {  745, Key::Key_Away },
            {  746, Key::Key_Messenger },
            {  747, Key::Key_WebCam },
            {  748, Key::Key_MailForward },
            {  749, Key::Key_Pictures },
            {  750, Key::Key_Music },
            {  751, Key::Key_Battery },
            {  752, Key::Key_Bluetooth },
            {  753, Key::Key_WLAN },
            {  754, Key::Key_UWB },
            {  755, Key::Key_AudioForward },
            {  756, Key::Key_AudioRepeat },
            {  757, Key::Key_AudioRandomPlay },
            {  758, Key::Key_Subtitle },
            {  759, Key::Key_AudioCycleTrack },
            {  760, Key::Key_Time },
            {  761, Key::Key_Hibernate },
            {  762, Key::Key_View },
            {  763, Key::Key_TopMenu },
            {  764, Key::Key_PowerDown },
            {  765, Key::Key_Suspend },
            {  766, Key::Key_ContrastAdjust },
            {  767, Key::Key_LaunchG },
            {  768, Key::Key_LaunchH },
            {  769, Key::Key_TouchpadToggle },
            {  770, Key::Key_TouchpadOn },
            {  771, Key::Key_TouchpadOff },
            {  772, Key::Key_MicMute },
            {  773, Key::Key_Red },
            {  774, Key::Key_Green },
            {  775, Key::Key_Yellow },
            {  776, Key::Key_Blue },
            {  777, Key::Key_ChannelUp },
            {  778, Key::Key_ChannelDown },
            {  779, Key::Key_Guide },
            {  780, Key::Key_Info },
            {  781, Key::Key_Settings },
            {  782, Key::Key_MicVolumeUp },
            {  783, Key::Key_MicVolumeDown },
            {  784, Key::Key_New },
            {  785, Key::Key_Open },
            {  786, Key::Key_Find },
            {  787, Key::Key_Undo },
            {  788, Key::Key_Redo },
            {  789, Key::Key_MediaLast },
            {  790, Key::Key_Select },
            {  791, Key::Key_Yes },
            {  792, Key::Key_No },
            {  793, Key::Key_Cancel },
            {  794, Key::Key_Printer },
            {  795, Key::Key_Execute },
            {  796, Key::Key_Sleep },
            {  797, Key::Key_Play },
            {  798, Key::Key_Zoom },
            {  799, Key::Key_Exit },
            {  800, Key::Key_Context1 },
            {  801, Key::Key_Context2 },
            {  802, Key::Key_Context3 },
            {  803, Key::Key_Context4 },
            {  804, Key::Key_Call },
            {  805, Key::Key_Hangup },
            {  806, Key::Key_Flip },
            {  807, Key::Key_ToggleCallHangup },
            {  808, Key::Key_VoiceDial },
            {  809, Key::Key_LastNumberRedial },
            {  810, Key::Key_Camera },
            {  811, Key::Key_CameraFocus },
            {  812, Key::Key_unknown },
        }),
        // enum 'KeyboardModifier'
        QtMocHelpers::EnumData<KeyboardModifier>(813, 813, QMC::EnumFlags{}).add({
            {  814, KeyboardModifier::NoModifier },
            {  815, KeyboardModifier::ShiftModifier },
            {  816, KeyboardModifier::ControlModifier },
            {  817, KeyboardModifier::AltModifier },
            {  818, KeyboardModifier::MetaModifier },
            {  819, KeyboardModifier::KeypadModifier },
            {  820, KeyboardModifier::GroupSwitchModifier },
            {  821, KeyboardModifier::KeyboardModifierMask },
        }),
        // enum 'KeyboardModifiers'
        QtMocHelpers::EnumData<KeyboardModifiers>(822, 813, QMC::EnumFlags{}).add({
            {  814, KeyboardModifier::NoModifier },
            {  815, KeyboardModifier::ShiftModifier },
            {  816, KeyboardModifier::ControlModifier },
            {  817, KeyboardModifier::AltModifier },
            {  818, KeyboardModifier::MetaModifier },
            {  819, KeyboardModifier::KeypadModifier },
            {  820, KeyboardModifier::GroupSwitchModifier },
            {  821, KeyboardModifier::KeyboardModifierMask },
        }),
        // enum 'Modifier'
        QtMocHelpers::EnumData<Modifier>(823, 823, QMC::EnumFlags{}).add({
            {  824, Modifier::META },
            {  825, Modifier::SHIFT },
            {  826, Modifier::CTRL },
            {  827, Modifier::ALT },
            {  828, Modifier::MODIFIER_MASK },
        }),
        // enum 'Modifiers'
        QtMocHelpers::EnumData<Modifiers>(829, 823, QMC::EnumFlags{}).add({
            {  824, Modifier::META },
            {  825, Modifier::SHIFT },
            {  826, Modifier::CTRL },
            {  827, Modifier::ALT },
            {  828, Modifier::MODIFIER_MASK },
        }),
        // enum 'ArrowType'
        QtMocHelpers::EnumData<ArrowType>(830, 830, QMC::EnumFlags{}).add({
            {  831, ArrowType::NoArrow },
            {  832, ArrowType::UpArrow },
            {  833, ArrowType::DownArrow },
            {  834, ArrowType::LeftArrow },
            {  835, ArrowType::RightArrow },
        }),
        // enum 'PenStyle'
        QtMocHelpers::EnumData<PenStyle>(836, 836, QMC::EnumFlags{}).add({
            {  837, PenStyle::NoPen },
            {  838, PenStyle::SolidLine },
            {  839, PenStyle::DashLine },
            {  840, PenStyle::DotLine },
            {  841, PenStyle::DashDotLine },
            {  842, PenStyle::DashDotDotLine },
            {  843, PenStyle::CustomDashLine },
        }),
        // enum 'PenCapStyle'
        QtMocHelpers::EnumData<PenCapStyle>(844, 844, QMC::EnumFlags{}).add({
            {  845, PenCapStyle::FlatCap },
            {  846, PenCapStyle::SquareCap },
            {  847, PenCapStyle::RoundCap },
            {  848, PenCapStyle::MPenCapStyle },
        }),
        // enum 'PenJoinStyle'
        QtMocHelpers::EnumData<PenJoinStyle>(849, 849, QMC::EnumFlags{}).add({
            {  850, PenJoinStyle::MiterJoin },
            {  851, PenJoinStyle::BevelJoin },
            {  852, PenJoinStyle::RoundJoin },
            {  853, PenJoinStyle::SvgMiterJoin },
            {  854, PenJoinStyle::MPenJoinStyle },
        }),
        // enum 'BrushStyle'
        QtMocHelpers::EnumData<BrushStyle>(855, 855, QMC::EnumFlags{}).add({
            {  856, BrushStyle::NoBrush },
            {  857, BrushStyle::SolidPattern },
            {  858, BrushStyle::Dense1Pattern },
            {  859, BrushStyle::Dense2Pattern },
            {  860, BrushStyle::Dense3Pattern },
            {  861, BrushStyle::Dense4Pattern },
            {  862, BrushStyle::Dense5Pattern },
            {  863, BrushStyle::Dense6Pattern },
            {  864, BrushStyle::Dense7Pattern },
            {  865, BrushStyle::HorPattern },
            {  866, BrushStyle::VerPattern },
            {  867, BrushStyle::CrossPattern },
            {  868, BrushStyle::BDiagPattern },
            {  869, BrushStyle::FDiagPattern },
            {  870, BrushStyle::DiagCrossPattern },
            {  871, BrushStyle::LinearGradientPattern },
            {  872, BrushStyle::RadialGradientPattern },
            {  873, BrushStyle::ConicalGradientPattern },
            {  874, BrushStyle::TexturePattern },
        }),
        // enum 'SizeMode'
        QtMocHelpers::EnumData<SizeMode>(875, 875, QMC::EnumFlags{}).add({
            {  876, SizeMode::AbsoluteSize },
            {  877, SizeMode::RelativeSize },
        }),
        // enum 'CursorShape'
        QtMocHelpers::EnumData<CursorShape>(878, 878, QMC::EnumFlags{}).add({
            {  879, CursorShape::ArrowCursor },
            {  880, CursorShape::UpArrowCursor },
            {  881, CursorShape::CrossCursor },
            {  882, CursorShape::WaitCursor },
            {  883, CursorShape::IBeamCursor },
            {  884, CursorShape::SizeVerCursor },
            {  885, CursorShape::SizeHorCursor },
            {  886, CursorShape::SizeBDiagCursor },
            {  887, CursorShape::SizeFDiagCursor },
            {  888, CursorShape::SizeAllCursor },
            {  889, CursorShape::BlankCursor },
            {  890, CursorShape::SplitVCursor },
            {  891, CursorShape::SplitHCursor },
            {  892, CursorShape::PointingHandCursor },
            {  893, CursorShape::ForbiddenCursor },
            {  894, CursorShape::WhatsThisCursor },
            {  895, CursorShape::BusyCursor },
            {  896, CursorShape::OpenHandCursor },
            {  897, CursorShape::ClosedHandCursor },
            {  898, CursorShape::DragCopyCursor },
            {  899, CursorShape::DragMoveCursor },
            {  900, CursorShape::DragLinkCursor },
            {  901, CursorShape::LastCursor },
            {  902, CursorShape::BitmapCursor },
            {  903, CursorShape::CustomCursor },
        }),
        // enum 'TextFormat'
        QtMocHelpers::EnumData<TextFormat>(904, 904, QMC::EnumFlags{}).add({
            {  905, TextFormat::PlainText },
            {  906, TextFormat::RichText },
            {  907, TextFormat::AutoText },
            {  908, TextFormat::MarkdownText },
        }),
        // enum 'AspectRatioMode'
        QtMocHelpers::EnumData<AspectRatioMode>(909, 909, QMC::EnumFlags{}).add({
            {  910, AspectRatioMode::IgnoreAspectRatio },
            {  911, AspectRatioMode::KeepAspectRatio },
            {  912, AspectRatioMode::KeepAspectRatioByExpanding },
        }),
        // enum 'DockWidgetArea'
        QtMocHelpers::EnumData<DockWidgetArea>(913, 913, QMC::EnumFlags{}).add({
            {  914, DockWidgetArea::LeftDockWidgetArea },
            {  915, DockWidgetArea::RightDockWidgetArea },
            {  916, DockWidgetArea::TopDockWidgetArea },
            {  917, DockWidgetArea::BottomDockWidgetArea },
            {  918, DockWidgetArea::DockWidgetArea_Mask },
            {  919, DockWidgetArea::AllDockWidgetAreas },
            {  920, DockWidgetArea::NoDockWidgetArea },
        }),
        // enum 'DockWidgetAreas'
        QtMocHelpers::EnumData<DockWidgetAreas>(921, 913, QMC::EnumFlags{}).add({
            {  914, DockWidgetArea::LeftDockWidgetArea },
            {  915, DockWidgetArea::RightDockWidgetArea },
            {  916, DockWidgetArea::TopDockWidgetArea },
            {  917, DockWidgetArea::BottomDockWidgetArea },
            {  918, DockWidgetArea::DockWidgetArea_Mask },
            {  919, DockWidgetArea::AllDockWidgetAreas },
            {  920, DockWidgetArea::NoDockWidgetArea },
        }),
        // enum 'ToolBarArea'
        QtMocHelpers::EnumData<ToolBarArea>(922, 922, QMC::EnumFlags{}).add({
            {  923, ToolBarArea::LeftToolBarArea },
            {  924, ToolBarArea::RightToolBarArea },
            {  925, ToolBarArea::TopToolBarArea },
            {  926, ToolBarArea::BottomToolBarArea },
            {  927, ToolBarArea::ToolBarArea_Mask },
            {  928, ToolBarArea::AllToolBarAreas },
            {  929, ToolBarArea::NoToolBarArea },
        }),
        // enum 'ToolBarAreas'
        QtMocHelpers::EnumData<ToolBarAreas>(930, 922, QMC::EnumFlags{}).add({
            {  923, ToolBarArea::LeftToolBarArea },
            {  924, ToolBarArea::RightToolBarArea },
            {  925, ToolBarArea::TopToolBarArea },
            {  926, ToolBarArea::BottomToolBarArea },
            {  927, ToolBarArea::ToolBarArea_Mask },
            {  928, ToolBarArea::AllToolBarAreas },
            {  929, ToolBarArea::NoToolBarArea },
        }),
        // enum 'DateFormat'
        QtMocHelpers::EnumData<DateFormat>(931, 931, QMC::EnumFlags{}).add({
            {  932, DateFormat::TextDate },
            {  933, DateFormat::ISODate },
            {  934, DateFormat::RFC2822Date },
            {  935, DateFormat::ISODateWithMs },
        }),
        // enum 'TimeSpec'
        QtMocHelpers::EnumData<TimeSpec>(936, 936, QMC::EnumFlags{}).add({
            {  937, TimeSpec::LocalTime },
            {  938, TimeSpec::UTC },
            {  939, TimeSpec::OffsetFromUTC },
            {  940, TimeSpec::TimeZone },
        }),
        // enum 'DayOfWeek'
        QtMocHelpers::EnumData<DayOfWeek>(941, 941, QMC::EnumFlags{}).add({
            {  942, DayOfWeek::Monday },
            {  943, DayOfWeek::Tuesday },
            {  944, DayOfWeek::Wednesday },
            {  945, DayOfWeek::Thursday },
            {  946, DayOfWeek::Friday },
            {  947, DayOfWeek::Saturday },
            {  948, DayOfWeek::Sunday },
        }),
        // enum 'ScrollBarPolicy'
        QtMocHelpers::EnumData<ScrollBarPolicy>(949, 949, QMC::EnumFlags{}).add({
            {  950, ScrollBarPolicy::ScrollBarAsNeeded },
            {  951, ScrollBarPolicy::ScrollBarAlwaysOff },
            {  952, ScrollBarPolicy::ScrollBarAlwaysOn },
        }),
        // enum 'CaseSensitivity'
        QtMocHelpers::EnumData<CaseSensitivity>(953, 953, QMC::EnumFlags{}).add({
            {  954, CaseSensitivity::CaseInsensitive },
            {  955, CaseSensitivity::CaseSensitive },
        }),
        // enum 'Corner'
        QtMocHelpers::EnumData<Corner>(956, 956, QMC::EnumFlags{}).add({
            {  957, Corner::TopLeftCorner },
            {  958, Corner::TopRightCorner },
            {  959, Corner::BottomLeftCorner },
            {  960, Corner::BottomRightCorner },
        }),
        // enum 'Edge'
        QtMocHelpers::EnumData<Edge>(961, 961, QMC::EnumFlags{}).add({
            {  962, Edge::TopEdge },
            {  963, Edge::LeftEdge },
            {  964, Edge::RightEdge },
            {  965, Edge::BottomEdge },
        }),
        // enum 'Edges'
        QtMocHelpers::EnumData<Edges>(966, 961, QMC::EnumFlags{}).add({
            {  962, Edge::TopEdge },
            {  963, Edge::LeftEdge },
            {  964, Edge::RightEdge },
            {  965, Edge::BottomEdge },
        }),
        // enum 'ConnectionType'
        QtMocHelpers::EnumData<ConnectionType>(967, 967, QMC::EnumFlags{}).add({
            {  968, ConnectionType::AutoConnection },
            {  969, ConnectionType::DirectConnection },
            {  970, ConnectionType::QueuedConnection },
            {  971, ConnectionType::BlockingQueuedConnection },
            {  972, ConnectionType::UniqueConnection },
            {  973, ConnectionType::SingleShotConnection },
        }),
        // enum 'ShortcutContext'
        QtMocHelpers::EnumData<ShortcutContext>(974, 974, QMC::EnumFlags{}).add({
            {  975, ShortcutContext::WidgetShortcut },
            {  976, ShortcutContext::WindowShortcut },
            {  977, ShortcutContext::ApplicationShortcut },
            {  978, ShortcutContext::WidgetWithChildrenShortcut },
        }),
        // enum 'FillRule'
        QtMocHelpers::EnumData<FillRule>(979, 979, QMC::EnumFlags{}).add({
            {  980, FillRule::OddEvenFill },
            {  981, FillRule::WindingFill },
        }),
        // enum 'MaskMode'
        QtMocHelpers::EnumData<MaskMode>(982, 982, QMC::EnumFlags{}).add({
            {  983, MaskMode::MaskInColor },
            {  984, MaskMode::MaskOutColor },
        }),
        // enum 'ClipOperation'
        QtMocHelpers::EnumData<ClipOperation>(985, 985, QMC::EnumFlags{}).add({
            {  986, ClipOperation::NoClip },
            {  987, ClipOperation::ReplaceClip },
            {  988, ClipOperation::IntersectClip },
        }),
        // enum 'ItemSelectionMode'
        QtMocHelpers::EnumData<ItemSelectionMode>(989, 989, QMC::EnumFlags{}).add({
            {  990, ItemSelectionMode::ContainsItemShape },
            {  991, ItemSelectionMode::IntersectsItemShape },
            {  992, ItemSelectionMode::ContainsItemBoundingRect },
            {  993, ItemSelectionMode::IntersectsItemBoundingRect },
        }),
        // enum 'ItemSelectionOperation'
        QtMocHelpers::EnumData<ItemSelectionOperation>(994, 994, QMC::EnumFlags{}).add({
            {  995, ItemSelectionOperation::ReplaceSelection },
            {  996, ItemSelectionOperation::AddToSelection },
        }),
        // enum 'TransformationMode'
        QtMocHelpers::EnumData<TransformationMode>(997, 997, QMC::EnumFlags{}).add({
            {  998, TransformationMode::FastTransformation },
            {  999, TransformationMode::SmoothTransformation },
        }),
        // enum 'Axis'
        QtMocHelpers::EnumData<Axis>(1000, 1000, QMC::EnumFlags{}).add({
            { 1001, Axis::XAxis },
            { 1002, Axis::YAxis },
            { 1003, Axis::ZAxis },
        }),
        // enum 'FocusReason'
        QtMocHelpers::EnumData<FocusReason>(1004, 1004, QMC::EnumFlags{}).add({
            { 1005, FocusReason::MouseFocusReason },
            { 1006, FocusReason::TabFocusReason },
            { 1007, FocusReason::BacktabFocusReason },
            { 1008, FocusReason::ActiveWindowFocusReason },
            { 1009, FocusReason::PopupFocusReason },
            { 1010, FocusReason::ShortcutFocusReason },
            { 1011, FocusReason::MenuBarFocusReason },
            { 1012, FocusReason::OtherFocusReason },
            { 1013, FocusReason::NoFocusReason },
        }),
        // enum 'ContextMenuPolicy'
        QtMocHelpers::EnumData<ContextMenuPolicy>(1014, 1014, QMC::EnumFlags{}).add({
            { 1015, ContextMenuPolicy::NoContextMenu },
            { 1016, ContextMenuPolicy::DefaultContextMenu },
            { 1017, ContextMenuPolicy::ActionsContextMenu },
            { 1018, ContextMenuPolicy::CustomContextMenu },
            { 1019, ContextMenuPolicy::PreventContextMenu },
        }),
        // enum 'ContextMenuTrigger'
        QtMocHelpers::EnumData<ContextMenuTrigger>(1020, 1020, QMC::EnumIsScoped).add({
            { 1021, ContextMenuTrigger::Press },
            { 1022, ContextMenuTrigger::Release },
        }),
        // enum 'InputMethodQuery'
        QtMocHelpers::EnumData<InputMethodQuery>(1023, 1023, QMC::EnumFlags{}).add({
            { 1024, InputMethodQuery::ImEnabled },
            { 1025, InputMethodQuery::ImCursorRectangle },
            { 1026, InputMethodQuery::ImFont },
            { 1027, InputMethodQuery::ImCursorPosition },
            { 1028, InputMethodQuery::ImSurroundingText },
            { 1029, InputMethodQuery::ImCurrentSelection },
            { 1030, InputMethodQuery::ImMaximumTextLength },
            { 1031, InputMethodQuery::ImAnchorPosition },
            { 1032, InputMethodQuery::ImHints },
            { 1033, InputMethodQuery::ImPreferredLanguage },
            { 1034, InputMethodQuery::ImAbsolutePosition },
            { 1035, InputMethodQuery::ImTextBeforeCursor },
            { 1036, InputMethodQuery::ImTextAfterCursor },
            { 1037, InputMethodQuery::ImEnterKeyType },
            { 1038, InputMethodQuery::ImAnchorRectangle },
            { 1039, InputMethodQuery::ImInputItemClipRectangle },
            { 1040, InputMethodQuery::ImReadOnly },
            { 1041, InputMethodQuery::ImPlatformData },
            { 1042, InputMethodQuery::ImQueryInput },
            { 1043, InputMethodQuery::ImQueryAll },
        }),
        // enum 'InputMethodQueries'
        QtMocHelpers::EnumData<InputMethodQueries>(1044, 1023, QMC::EnumFlags{}).add({
            { 1024, InputMethodQuery::ImEnabled },
            { 1025, InputMethodQuery::ImCursorRectangle },
            { 1026, InputMethodQuery::ImFont },
            { 1027, InputMethodQuery::ImCursorPosition },
            { 1028, InputMethodQuery::ImSurroundingText },
            { 1029, InputMethodQuery::ImCurrentSelection },
            { 1030, InputMethodQuery::ImMaximumTextLength },
            { 1031, InputMethodQuery::ImAnchorPosition },
            { 1032, InputMethodQuery::ImHints },
            { 1033, InputMethodQuery::ImPreferredLanguage },
            { 1034, InputMethodQuery::ImAbsolutePosition },
            { 1035, InputMethodQuery::ImTextBeforeCursor },
            { 1036, InputMethodQuery::ImTextAfterCursor },
            { 1037, InputMethodQuery::ImEnterKeyType },
            { 1038, InputMethodQuery::ImAnchorRectangle },
            { 1039, InputMethodQuery::ImInputItemClipRectangle },
            { 1040, InputMethodQuery::ImReadOnly },
            { 1041, InputMethodQuery::ImPlatformData },
            { 1042, InputMethodQuery::ImQueryInput },
            { 1043, InputMethodQuery::ImQueryAll },
        }),
        // enum 'InputMethodHint'
        QtMocHelpers::EnumData<InputMethodHint>(1045, 1045, QMC::EnumFlags{}).add({
            { 1046, InputMethodHint::ImhNone },
            { 1047, InputMethodHint::ImhHiddenText },
            { 1048, InputMethodHint::ImhSensitiveData },
            { 1049, InputMethodHint::ImhNoAutoUppercase },
            { 1050, InputMethodHint::ImhPreferNumbers },
            { 1051, InputMethodHint::ImhPreferUppercase },
            { 1052, InputMethodHint::ImhPreferLowercase },
            { 1053, InputMethodHint::ImhNoPredictiveText },
            { 1054, InputMethodHint::ImhDate },
            { 1055, InputMethodHint::ImhTime },
            { 1056, InputMethodHint::ImhPreferLatin },
            { 1057, InputMethodHint::ImhMultiLine },
            { 1058, InputMethodHint::ImhNoEditMenu },
            { 1059, InputMethodHint::ImhNoTextHandles },
            { 1060, InputMethodHint::ImhDigitsOnly },
            { 1061, InputMethodHint::ImhFormattedNumbersOnly },
            { 1062, InputMethodHint::ImhUppercaseOnly },
            { 1063, InputMethodHint::ImhLowercaseOnly },
            { 1064, InputMethodHint::ImhDialableCharactersOnly },
            { 1065, InputMethodHint::ImhEmailCharactersOnly },
            { 1066, InputMethodHint::ImhUrlCharactersOnly },
            { 1067, InputMethodHint::ImhLatinOnly },
            { 1068, InputMethodHint::ImhExclusiveInputMask },
        }),
        // enum 'InputMethodHints'
        QtMocHelpers::EnumData<InputMethodHints>(1069, 1045, QMC::EnumFlags{}).add({
            { 1046, InputMethodHint::ImhNone },
            { 1047, InputMethodHint::ImhHiddenText },
            { 1048, InputMethodHint::ImhSensitiveData },
            { 1049, InputMethodHint::ImhNoAutoUppercase },
            { 1050, InputMethodHint::ImhPreferNumbers },
            { 1051, InputMethodHint::ImhPreferUppercase },
            { 1052, InputMethodHint::ImhPreferLowercase },
            { 1053, InputMethodHint::ImhNoPredictiveText },
            { 1054, InputMethodHint::ImhDate },
            { 1055, InputMethodHint::ImhTime },
            { 1056, InputMethodHint::ImhPreferLatin },
            { 1057, InputMethodHint::ImhMultiLine },
            { 1058, InputMethodHint::ImhNoEditMenu },
            { 1059, InputMethodHint::ImhNoTextHandles },
            { 1060, InputMethodHint::ImhDigitsOnly },
            { 1061, InputMethodHint::ImhFormattedNumbersOnly },
            { 1062, InputMethodHint::ImhUppercaseOnly },
            { 1063, InputMethodHint::ImhLowercaseOnly },
            { 1064, InputMethodHint::ImhDialableCharactersOnly },
            { 1065, InputMethodHint::ImhEmailCharactersOnly },
            { 1066, InputMethodHint::ImhUrlCharactersOnly },
            { 1067, InputMethodHint::ImhLatinOnly },
            { 1068, InputMethodHint::ImhExclusiveInputMask },
        }),
        // enum 'EnterKeyType'
        QtMocHelpers::EnumData<EnterKeyType>(1070, 1070, QMC::EnumFlags{}).add({
            { 1071, EnterKeyType::EnterKeyDefault },
            { 1072, EnterKeyType::EnterKeyReturn },
            { 1073, EnterKeyType::EnterKeyDone },
            { 1074, EnterKeyType::EnterKeyGo },
            { 1075, EnterKeyType::EnterKeySend },
            { 1076, EnterKeyType::EnterKeySearch },
            { 1077, EnterKeyType::EnterKeyNext },
            { 1078, EnterKeyType::EnterKeyPrevious },
        }),
        // enum 'ToolButtonStyle'
        QtMocHelpers::EnumData<ToolButtonStyle>(1079, 1079, QMC::EnumFlags{}).add({
            { 1080, ToolButtonStyle::ToolButtonIconOnly },
            { 1081, ToolButtonStyle::ToolButtonTextOnly },
            { 1082, ToolButtonStyle::ToolButtonTextBesideIcon },
            { 1083, ToolButtonStyle::ToolButtonTextUnderIcon },
            { 1084, ToolButtonStyle::ToolButtonFollowStyle },
        }),
        // enum 'LayoutDirection'
        QtMocHelpers::EnumData<LayoutDirection>(1085, 1085, QMC::EnumFlags{}).add({
            { 1086, LayoutDirection::LeftToRight },
            { 1087, LayoutDirection::RightToLeft },
            { 1088, LayoutDirection::LayoutDirectionAuto },
        }),
        // enum 'DropAction'
        QtMocHelpers::EnumData<DropAction>(1089, 1089, QMC::EnumFlags{}).add({
            { 1090, DropAction::CopyAction },
            { 1091, DropAction::MoveAction },
            { 1092, DropAction::LinkAction },
            { 1093, DropAction::ActionMask },
            { 1094, DropAction::TargetMoveAction },
            { 1095, DropAction::IgnoreAction },
        }),
        // enum 'DropActions'
        QtMocHelpers::EnumData<DropActions>(1096, 1089, QMC::EnumFlags{}).add({
            { 1090, DropAction::CopyAction },
            { 1091, DropAction::MoveAction },
            { 1092, DropAction::LinkAction },
            { 1093, DropAction::ActionMask },
            { 1094, DropAction::TargetMoveAction },
            { 1095, DropAction::IgnoreAction },
        }),
        // enum 'CheckState'
        QtMocHelpers::EnumData<CheckState>(1097, 1097, QMC::EnumFlags{}).add({
            { 1098, CheckState::Unchecked },
            { 1099, CheckState::PartiallyChecked },
            { 1100, CheckState::Checked },
        }),
        // enum 'ItemDataRole'
        QtMocHelpers::EnumData<ItemDataRole>(1101, 1101, QMC::EnumFlags{}).add({
            { 1102, ItemDataRole::DisplayRole },
            { 1103, ItemDataRole::DecorationRole },
            { 1104, ItemDataRole::EditRole },
            { 1105, ItemDataRole::ToolTipRole },
            { 1106, ItemDataRole::StatusTipRole },
            { 1107, ItemDataRole::WhatsThisRole },
            { 1108, ItemDataRole::FontRole },
            { 1109, ItemDataRole::TextAlignmentRole },
            { 1110, ItemDataRole::BackgroundRole },
            { 1111, ItemDataRole::ForegroundRole },
            { 1112, ItemDataRole::CheckStateRole },
            { 1113, ItemDataRole::AccessibleTextRole },
            { 1114, ItemDataRole::AccessibleDescriptionRole },
            { 1115, ItemDataRole::SizeHintRole },
            { 1116, ItemDataRole::InitialSortOrderRole },
            { 1117, ItemDataRole::DisplayPropertyRole },
            { 1118, ItemDataRole::DecorationPropertyRole },
            { 1119, ItemDataRole::ToolTipPropertyRole },
            { 1120, ItemDataRole::StatusTipPropertyRole },
            { 1121, ItemDataRole::WhatsThisPropertyRole },
            { 1122, ItemDataRole::UserRole },
        }),
        // enum 'ItemFlags'
        QtMocHelpers::EnumData<ItemFlags>(1123, 1124, QMC::EnumFlags{}).add({
            { 1125, ItemFlag::NoItemFlags },
            { 1126, ItemFlag::ItemIsSelectable },
            { 1127, ItemFlag::ItemIsEditable },
            { 1128, ItemFlag::ItemIsDragEnabled },
            { 1129, ItemFlag::ItemIsDropEnabled },
            { 1130, ItemFlag::ItemIsUserCheckable },
            { 1131, ItemFlag::ItemIsEnabled },
            { 1132, ItemFlag::ItemIsAutoTristate },
            { 1133, ItemFlag::ItemNeverHasChildren },
            { 1134, ItemFlag::ItemIsUserTristate },
        }),
        // enum 'MatchFlags'
        QtMocHelpers::EnumData<MatchFlags>(1135, 1136, QMC::EnumFlags{}).add({
            { 1137, MatchFlag::MatchExactly },
            { 1138, MatchFlag::MatchContains },
            { 1139, MatchFlag::MatchStartsWith },
            { 1140, MatchFlag::MatchEndsWith },
            { 1141, MatchFlag::MatchRegularExpression },
            { 1142, MatchFlag::MatchWildcard },
            { 1143, MatchFlag::MatchFixedString },
            { 1144, MatchFlag::MatchTypeMask },
            { 1145, MatchFlag::MatchCaseSensitive },
            { 1146, MatchFlag::MatchWrap },
            { 1147, MatchFlag::MatchRecursive },
        }),
        // enum 'WindowModality'
        QtMocHelpers::EnumData<WindowModality>(1148, 1148, QMC::EnumFlags{}).add({
            { 1149, WindowModality::NonModal },
            { 1150, WindowModality::WindowModal },
            { 1151, WindowModality::ApplicationModal },
        }),
        // enum 'TextInteractionFlag'
        QtMocHelpers::EnumData<TextInteractionFlag>(1152, 1152, QMC::EnumFlags{}).add({
            { 1153, TextInteractionFlag::NoTextInteraction },
            { 1154, TextInteractionFlag::TextSelectableByMouse },
            { 1155, TextInteractionFlag::TextSelectableByKeyboard },
            { 1156, TextInteractionFlag::LinksAccessibleByMouse },
            { 1157, TextInteractionFlag::LinksAccessibleByKeyboard },
            { 1158, TextInteractionFlag::TextEditable },
            { 1159, TextInteractionFlag::TextEditorInteraction },
            { 1160, TextInteractionFlag::TextBrowserInteraction },
        }),
        // enum 'TextInteractionFlags'
        QtMocHelpers::EnumData<TextInteractionFlags>(1161, 1152, QMC::EnumFlags{}).add({
            { 1153, TextInteractionFlag::NoTextInteraction },
            { 1154, TextInteractionFlag::TextSelectableByMouse },
            { 1155, TextInteractionFlag::TextSelectableByKeyboard },
            { 1156, TextInteractionFlag::LinksAccessibleByMouse },
            { 1157, TextInteractionFlag::LinksAccessibleByKeyboard },
            { 1158, TextInteractionFlag::TextEditable },
            { 1159, TextInteractionFlag::TextEditorInteraction },
            { 1160, TextInteractionFlag::TextBrowserInteraction },
        }),
        // enum 'SizeHint'
        QtMocHelpers::EnumData<SizeHint>(1162, 1162, QMC::EnumFlags{}).add({
            { 1163, SizeHint::MinimumSize },
            { 1164, SizeHint::PreferredSize },
            { 1165, SizeHint::MaximumSize },
            { 1166, SizeHint::MinimumDescent },
            { 1167, SizeHint::NSizeHints },
        }),
        // enum 'TouchPointStates'
        QtMocHelpers::EnumData<TouchPointStates>(1168, 1169, QMC::EnumFlags{}).add({
            { 1170, TouchPointState::TouchPointUnknownState },
            { 1171, TouchPointState::TouchPointPressed },
            { 1172, TouchPointState::TouchPointMoved },
            { 1173, TouchPointState::TouchPointStationary },
            { 1174, TouchPointState::TouchPointReleased },
        }),
        // enum 'GestureState'
        QtMocHelpers::EnumData<GestureState>(1175, 1175, QMC::EnumFlags{}).add({
            { 1176, GestureState::NoGesture },
            { 1177, GestureState::GestureStarted },
            { 1178, GestureState::GestureUpdated },
            { 1179, GestureState::GestureFinished },
            { 1180, GestureState::GestureCanceled },
        }),
        // enum 'GestureType'
        QtMocHelpers::EnumData<GestureType>(1181, 1181, QMC::EnumFlags{}).add({
            { 1182, GestureType::TapGesture },
            { 1183, GestureType::TapAndHoldGesture },
            { 1184, GestureType::PanGesture },
            { 1185, GestureType::PinchGesture },
            { 1186, GestureType::SwipeGesture },
            { 1187, GestureType::CustomGesture },
            { 1188, GestureType::LastGestureType },
        }),
        // enum 'NativeGestureType'
        QtMocHelpers::EnumData<NativeGestureType>(1189, 1189, QMC::EnumFlags{}).add({
            { 1190, NativeGestureType::BeginNativeGesture },
            { 1191, NativeGestureType::EndNativeGesture },
            { 1192, NativeGestureType::PanNativeGesture },
            { 1193, NativeGestureType::ZoomNativeGesture },
            { 1194, NativeGestureType::SmartZoomNativeGesture },
            { 1195, NativeGestureType::RotateNativeGesture },
            { 1196, NativeGestureType::SwipeNativeGesture },
        }),
        // enum 'CursorMoveStyle'
        QtMocHelpers::EnumData<CursorMoveStyle>(1197, 1197, QMC::EnumFlags{}).add({
            { 1198, CursorMoveStyle::LogicalMoveStyle },
            { 1199, CursorMoveStyle::VisualMoveStyle },
        }),
        // enum 'TimerType'
        QtMocHelpers::EnumData<TimerType>(1200, 1200, QMC::EnumFlags{}).add({
            { 1201, TimerType::PreciseTimer },
            { 1202, TimerType::CoarseTimer },
            { 1203, TimerType::VeryCoarseTimer },
        }),
        // enum 'TimerId'
        QtMocHelpers::EnumData<TimerId>(1204, 1204, QMC::EnumIsScoped).add({
            { 1205, TimerId::Invalid },
        }),
        // enum 'ScrollPhase'
        QtMocHelpers::EnumData<ScrollPhase>(1206, 1206, QMC::EnumFlags{}).add({
            { 1207, ScrollPhase::NoScrollPhase },
            { 1208, ScrollPhase::ScrollBegin },
            { 1209, ScrollPhase::ScrollUpdate },
            { 1210, ScrollPhase::ScrollEnd },
            { 1211, ScrollPhase::ScrollMomentum },
        }),
        // enum 'MouseEventSource'
        QtMocHelpers::EnumData<MouseEventSource>(1212, 1212, QMC::EnumFlags{}).add({
            { 1213, MouseEventSource::MouseEventNotSynthesized },
            { 1214, MouseEventSource::MouseEventSynthesizedBySystem },
            { 1215, MouseEventSource::MouseEventSynthesizedByQt },
            { 1216, MouseEventSource::MouseEventSynthesizedByApplication },
        }),
        // enum 'MouseEventFlags'
        QtMocHelpers::EnumData<MouseEventFlags>(1217, 1218, QMC::EnumFlags{}).add({
            { 1219, MouseEventFlag::NoMouseEventFlag },
            { 1220, MouseEventFlag::MouseEventCreatedDoubleClick },
            { 1221, MouseEventFlag::MouseEventFlagMask },
        }),
        // enum 'ChecksumType'
        QtMocHelpers::EnumData<ChecksumType>(1222, 1222, QMC::EnumFlags{}).add({
            { 1223, ChecksumType::ChecksumIso3309 },
            { 1224, ChecksumType::ChecksumItuV41 },
        }),
        // enum 'HighDpiScaleFactorRoundingPolicy'
        QtMocHelpers::EnumData<HighDpiScaleFactorRoundingPolicy>(1225, 1225, QMC::EnumIsScoped).add({
            { 1226, HighDpiScaleFactorRoundingPolicy::Unset },
            { 1227, HighDpiScaleFactorRoundingPolicy::Round },
            { 1228, HighDpiScaleFactorRoundingPolicy::Ceil },
            { 1229, HighDpiScaleFactorRoundingPolicy::Floor },
            { 1230, HighDpiScaleFactorRoundingPolicy::RoundPreferFloor },
            { 1231, HighDpiScaleFactorRoundingPolicy::PassThrough },
        }),
        // enum 'PermissionStatus'
        QtMocHelpers::EnumData<PermissionStatus>(1232, 1232, QMC::EnumIsScoped).add({
            { 1233, PermissionStatus::Undetermined },
            { 1234, PermissionStatus::Granted },
            { 1235, PermissionStatus::Denied },
        }),
    };
    return QtMocHelpers::metaObjectData<void, qt_meta_tag_ZN2QtE_t>(QMC::PropertyAccessInStaticMetaCall, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}

static constexpr auto qt_staticMetaObjectContent_ZN2QtE =
    Qt::qt_create_metaobjectdata<qt_meta_tag_ZN2QtE_t>();
static constexpr auto qt_staticMetaObjectStaticContent_ZN2QtE =
    qt_staticMetaObjectContent_ZN2QtE.staticData;
static constexpr auto qt_staticMetaObjectRelocatingContent_ZN2QtE =
    qt_staticMetaObjectContent_ZN2QtE.relocatingData;

Q_CONSTINIT const QMetaObject Qt::staticMetaObject = { {
    nullptr,
    qt_staticMetaObjectStaticContent_ZN2QtE.stringdata,
    qt_staticMetaObjectStaticContent_ZN2QtE.data,
    nullptr,
    nullptr,
    qt_staticMetaObjectRelocatingContent_ZN2QtE.metaTypes,
    nullptr
} };

QT_WARNING_POP
