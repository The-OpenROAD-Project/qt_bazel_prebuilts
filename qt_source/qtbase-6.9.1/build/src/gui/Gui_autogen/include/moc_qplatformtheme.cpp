/****************************************************************************
** Meta object code from reading C++ file 'qplatformtheme.h'
**
** Created by: The Qt Meta Object Compiler version 69 (Qt 6.9.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "../../../../../src/gui/kernel/qplatformtheme.h"
#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'qplatformtheme.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 69
#error "This file was generated using the moc from 6.9.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN14QPlatformThemeE_t {};
} // unnamed namespace

template <> constexpr inline auto QPlatformTheme::qt_create_metaobjectdata<qt_meta_tag_ZN14QPlatformThemeE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "QPlatformTheme",
        "ThemeHint",
        "CursorFlashTime",
        "KeyboardInputInterval",
        "MouseDoubleClickInterval",
        "StartDragDistance",
        "StartDragTime",
        "KeyboardAutoRepeatRate",
        "PasswordMaskDelay",
        "StartDragVelocity",
        "TextCursorWidth",
        "DropShadow",
        "MaximumScrollBarDragDistance",
        "ToolButtonStyle",
        "ToolBarIconSize",
        "ItemViewActivateItemOnSingleClick",
        "SystemIconThemeName",
        "SystemIconFallbackThemeName",
        "IconThemeSearchPaths",
        "StyleNames",
        "WindowAutoPlacement",
        "DialogButtonBoxLayout",
        "DialogButtonBoxButtonsHaveIcons",
        "UseFullScreenForPopupMenu",
        "KeyboardScheme",
        "UiEffects",
        "SpellCheckUnderlineStyle",
        "TabFocusBehavior",
        "IconPixmapSizes",
        "PasswordMaskCharacter",
        "DialogSnapToDefaultButton",
        "ContextMenuOnMouseRelease",
        "MousePressAndHoldInterval",
        "MouseDoubleClickDistance",
        "WheelScrollLines",
        "TouchDoubleTapDistance",
        "ShowShortcutsInContextMenus",
        "IconFallbackSearchPaths",
        "MouseQuickSelectionThreshold",
        "InteractiveResizeAcrossScreens",
        "ShowDirectoriesFirst",
        "PreselectFirstFileInDirectory",
        "ButtonPressKeys",
        "SetFocusOnTouchRelease",
        "FlickStartDistance",
        "FlickMaximumVelocity",
        "FlickDeceleration",
        "MenuBarFocusOnAltPressRelease",
        "MouseCursorTheme",
        "MouseCursorSize",
        "UnderlineShortcut",
        "ShowIconsInMenus",
        "PreferFileIconFromTheme",
        "DialogType",
        "FileDialog",
        "ColorDialog",
        "FontDialog",
        "MessageDialog",
        "Palette",
        "SystemPalette",
        "ToolTipPalette",
        "ToolButtonPalette",
        "ButtonPalette",
        "CheckBoxPalette",
        "RadioButtonPalette",
        "HeaderPalette",
        "ComboBoxPalette",
        "ItemViewPalette",
        "MessageBoxLabelPelette",
        "MessageBoxLabelPalette",
        "TabBarPalette",
        "LabelPalette",
        "GroupBoxPalette",
        "MenuPalette",
        "MenuBarPalette",
        "TextEditPalette",
        "TextLineEditPalette",
        "NPalettes",
        "Font",
        "SystemFont",
        "MenuFont",
        "MenuBarFont",
        "MenuItemFont",
        "MessageBoxFont",
        "LabelFont",
        "TipLabelFont",
        "StatusBarFont",
        "TitleBarFont",
        "MdiSubWindowTitleFont",
        "DockWidgetTitleFont",
        "PushButtonFont",
        "CheckBoxFont",
        "RadioButtonFont",
        "ToolButtonFont",
        "ItemViewFont",
        "ListViewFont",
        "HeaderViewFont",
        "ListBoxFont",
        "ComboMenuItemFont",
        "ComboLineEditFont",
        "SmallFont",
        "MiniFont",
        "FixedFont",
        "GroupBoxTitleFont",
        "TabButtonFont",
        "EditorFont",
        "NFonts",
        "StandardPixmap",
        "TitleBarMenuButton",
        "TitleBarMinButton",
        "TitleBarMaxButton",
        "TitleBarCloseButton",
        "TitleBarNormalButton",
        "TitleBarShadeButton",
        "TitleBarUnshadeButton",
        "TitleBarContextHelpButton",
        "DockWidgetCloseButton",
        "MessageBoxInformation",
        "MessageBoxWarning",
        "MessageBoxCritical",
        "MessageBoxQuestion",
        "DesktopIcon",
        "TrashIcon",
        "ComputerIcon",
        "DriveFDIcon",
        "DriveHDIcon",
        "DriveCDIcon",
        "DriveDVDIcon",
        "DriveNetIcon",
        "DirOpenIcon",
        "DirClosedIcon",
        "DirLinkIcon",
        "DirLinkOpenIcon",
        "FileIcon",
        "FileLinkIcon",
        "ToolBarHorizontalExtensionButton",
        "ToolBarVerticalExtensionButton",
        "FileDialogStart",
        "FileDialogEnd",
        "FileDialogToParent",
        "FileDialogNewFolder",
        "FileDialogDetailedView",
        "FileDialogInfoView",
        "FileDialogContentsView",
        "FileDialogListView",
        "FileDialogBack",
        "DirIcon",
        "DialogOkButton",
        "DialogCancelButton",
        "DialogHelpButton",
        "DialogOpenButton",
        "DialogSaveButton",
        "DialogCloseButton",
        "DialogApplyButton",
        "DialogResetButton",
        "DialogDiscardButton",
        "DialogYesButton",
        "DialogNoButton",
        "ArrowUp",
        "ArrowDown",
        "ArrowLeft",
        "ArrowRight",
        "ArrowBack",
        "ArrowForward",
        "DirHomeIcon",
        "CommandLink",
        "VistaShield",
        "BrowserReload",
        "BrowserStop",
        "MediaPlay",
        "MediaStop",
        "MediaPause",
        "MediaSkipForward",
        "MediaSkipBackward",
        "MediaSeekForward",
        "MediaSeekBackward",
        "MediaVolume",
        "MediaVolumeMuted",
        "LineEditClearButton",
        "DialogYesToAllButton",
        "DialogNoToAllButton",
        "DialogSaveAllButton",
        "DialogAbortButton",
        "DialogRetryButton",
        "DialogIgnoreButton",
        "RestoreDefaultsButton",
        "TabCloseButton",
        "NStandardPixmap",
        "CustomBase",
        "KeyboardSchemes",
        "WindowsKeyboardScheme",
        "MacKeyboardScheme",
        "X11KeyboardScheme",
        "KdeKeyboardScheme",
        "GnomeKeyboardScheme",
        "CdeKeyboardScheme",
        "UiEffect",
        "GeneralUiEffect",
        "AnimateMenuUiEffect",
        "FadeMenuUiEffect",
        "AnimateComboUiEffect",
        "AnimateTooltipUiEffect",
        "FadeTooltipUiEffect",
        "AnimateToolBoxUiEffect",
        "HoverEffect"
    };

    QtMocHelpers::UintData qt_methods {
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
        // enum 'ThemeHint'
        QtMocHelpers::EnumData<ThemeHint>(1, 1, QMC::EnumFlags{}).add({
            {    2, ThemeHint::CursorFlashTime },
            {    3, ThemeHint::KeyboardInputInterval },
            {    4, ThemeHint::MouseDoubleClickInterval },
            {    5, ThemeHint::StartDragDistance },
            {    6, ThemeHint::StartDragTime },
            {    7, ThemeHint::KeyboardAutoRepeatRate },
            {    8, ThemeHint::PasswordMaskDelay },
            {    9, ThemeHint::StartDragVelocity },
            {   10, ThemeHint::TextCursorWidth },
            {   11, ThemeHint::DropShadow },
            {   12, ThemeHint::MaximumScrollBarDragDistance },
            {   13, ThemeHint::ToolButtonStyle },
            {   14, ThemeHint::ToolBarIconSize },
            {   15, ThemeHint::ItemViewActivateItemOnSingleClick },
            {   16, ThemeHint::SystemIconThemeName },
            {   17, ThemeHint::SystemIconFallbackThemeName },
            {   18, ThemeHint::IconThemeSearchPaths },
            {   19, ThemeHint::StyleNames },
            {   20, ThemeHint::WindowAutoPlacement },
            {   21, ThemeHint::DialogButtonBoxLayout },
            {   22, ThemeHint::DialogButtonBoxButtonsHaveIcons },
            {   23, ThemeHint::UseFullScreenForPopupMenu },
            {   24, ThemeHint::KeyboardScheme },
            {   25, ThemeHint::UiEffects },
            {   26, ThemeHint::SpellCheckUnderlineStyle },
            {   27, ThemeHint::TabFocusBehavior },
            {   28, ThemeHint::IconPixmapSizes },
            {   29, ThemeHint::PasswordMaskCharacter },
            {   30, ThemeHint::DialogSnapToDefaultButton },
            {   31, ThemeHint::ContextMenuOnMouseRelease },
            {   32, ThemeHint::MousePressAndHoldInterval },
            {   33, ThemeHint::MouseDoubleClickDistance },
            {   34, ThemeHint::WheelScrollLines },
            {   35, ThemeHint::TouchDoubleTapDistance },
            {   36, ThemeHint::ShowShortcutsInContextMenus },
            {   37, ThemeHint::IconFallbackSearchPaths },
            {   38, ThemeHint::MouseQuickSelectionThreshold },
            {   39, ThemeHint::InteractiveResizeAcrossScreens },
            {   40, ThemeHint::ShowDirectoriesFirst },
            {   41, ThemeHint::PreselectFirstFileInDirectory },
            {   42, ThemeHint::ButtonPressKeys },
            {   43, ThemeHint::SetFocusOnTouchRelease },
            {   44, ThemeHint::FlickStartDistance },
            {   45, ThemeHint::FlickMaximumVelocity },
            {   46, ThemeHint::FlickDeceleration },
            {   47, ThemeHint::MenuBarFocusOnAltPressRelease },
            {   48, ThemeHint::MouseCursorTheme },
            {   49, ThemeHint::MouseCursorSize },
            {   50, ThemeHint::UnderlineShortcut },
            {   51, ThemeHint::ShowIconsInMenus },
            {   52, ThemeHint::PreferFileIconFromTheme },
        }),
        // enum 'DialogType'
        QtMocHelpers::EnumData<DialogType>(53, 53, QMC::EnumFlags{}).add({
            {   54, DialogType::FileDialog },
            {   55, DialogType::ColorDialog },
            {   56, DialogType::FontDialog },
            {   57, DialogType::MessageDialog },
        }),
        // enum 'Palette'
        QtMocHelpers::EnumData<Palette>(58, 58, QMC::EnumFlags{}).add({
            {   59, Palette::SystemPalette },
            {   60, Palette::ToolTipPalette },
            {   61, Palette::ToolButtonPalette },
            {   62, Palette::ButtonPalette },
            {   63, Palette::CheckBoxPalette },
            {   64, Palette::RadioButtonPalette },
            {   65, Palette::HeaderPalette },
            {   66, Palette::ComboBoxPalette },
            {   67, Palette::ItemViewPalette },
            {   68, Palette::MessageBoxLabelPelette },
            {   69, Palette::MessageBoxLabelPalette },
            {   70, Palette::TabBarPalette },
            {   71, Palette::LabelPalette },
            {   72, Palette::GroupBoxPalette },
            {   73, Palette::MenuPalette },
            {   74, Palette::MenuBarPalette },
            {   75, Palette::TextEditPalette },
            {   76, Palette::TextLineEditPalette },
            {   77, Palette::NPalettes },
        }),
        // enum 'Font'
        QtMocHelpers::EnumData<Font>(78, 78, QMC::EnumFlags{}).add({
            {   79, Font::SystemFont },
            {   80, Font::MenuFont },
            {   81, Font::MenuBarFont },
            {   82, Font::MenuItemFont },
            {   83, Font::MessageBoxFont },
            {   84, Font::LabelFont },
            {   85, Font::TipLabelFont },
            {   86, Font::StatusBarFont },
            {   87, Font::TitleBarFont },
            {   88, Font::MdiSubWindowTitleFont },
            {   89, Font::DockWidgetTitleFont },
            {   90, Font::PushButtonFont },
            {   91, Font::CheckBoxFont },
            {   92, Font::RadioButtonFont },
            {   93, Font::ToolButtonFont },
            {   94, Font::ItemViewFont },
            {   95, Font::ListViewFont },
            {   96, Font::HeaderViewFont },
            {   97, Font::ListBoxFont },
            {   98, Font::ComboMenuItemFont },
            {   99, Font::ComboLineEditFont },
            {  100, Font::SmallFont },
            {  101, Font::MiniFont },
            {  102, Font::FixedFont },
            {  103, Font::GroupBoxTitleFont },
            {  104, Font::TabButtonFont },
            {  105, Font::EditorFont },
            {  106, Font::NFonts },
        }),
        // enum 'StandardPixmap'
        QtMocHelpers::EnumData<StandardPixmap>(107, 107, QMC::EnumFlags{}).add({
            {  108, StandardPixmap::TitleBarMenuButton },
            {  109, StandardPixmap::TitleBarMinButton },
            {  110, StandardPixmap::TitleBarMaxButton },
            {  111, StandardPixmap::TitleBarCloseButton },
            {  112, StandardPixmap::TitleBarNormalButton },
            {  113, StandardPixmap::TitleBarShadeButton },
            {  114, StandardPixmap::TitleBarUnshadeButton },
            {  115, StandardPixmap::TitleBarContextHelpButton },
            {  116, StandardPixmap::DockWidgetCloseButton },
            {  117, StandardPixmap::MessageBoxInformation },
            {  118, StandardPixmap::MessageBoxWarning },
            {  119, StandardPixmap::MessageBoxCritical },
            {  120, StandardPixmap::MessageBoxQuestion },
            {  121, StandardPixmap::DesktopIcon },
            {  122, StandardPixmap::TrashIcon },
            {  123, StandardPixmap::ComputerIcon },
            {  124, StandardPixmap::DriveFDIcon },
            {  125, StandardPixmap::DriveHDIcon },
            {  126, StandardPixmap::DriveCDIcon },
            {  127, StandardPixmap::DriveDVDIcon },
            {  128, StandardPixmap::DriveNetIcon },
            {  129, StandardPixmap::DirOpenIcon },
            {  130, StandardPixmap::DirClosedIcon },
            {  131, StandardPixmap::DirLinkIcon },
            {  132, StandardPixmap::DirLinkOpenIcon },
            {  133, StandardPixmap::FileIcon },
            {  134, StandardPixmap::FileLinkIcon },
            {  135, StandardPixmap::ToolBarHorizontalExtensionButton },
            {  136, StandardPixmap::ToolBarVerticalExtensionButton },
            {  137, StandardPixmap::FileDialogStart },
            {  138, StandardPixmap::FileDialogEnd },
            {  139, StandardPixmap::FileDialogToParent },
            {  140, StandardPixmap::FileDialogNewFolder },
            {  141, StandardPixmap::FileDialogDetailedView },
            {  142, StandardPixmap::FileDialogInfoView },
            {  143, StandardPixmap::FileDialogContentsView },
            {  144, StandardPixmap::FileDialogListView },
            {  145, StandardPixmap::FileDialogBack },
            {  146, StandardPixmap::DirIcon },
            {  147, StandardPixmap::DialogOkButton },
            {  148, StandardPixmap::DialogCancelButton },
            {  149, StandardPixmap::DialogHelpButton },
            {  150, StandardPixmap::DialogOpenButton },
            {  151, StandardPixmap::DialogSaveButton },
            {  152, StandardPixmap::DialogCloseButton },
            {  153, StandardPixmap::DialogApplyButton },
            {  154, StandardPixmap::DialogResetButton },
            {  155, StandardPixmap::DialogDiscardButton },
            {  156, StandardPixmap::DialogYesButton },
            {  157, StandardPixmap::DialogNoButton },
            {  158, StandardPixmap::ArrowUp },
            {  159, StandardPixmap::ArrowDown },
            {  160, StandardPixmap::ArrowLeft },
            {  161, StandardPixmap::ArrowRight },
            {  162, StandardPixmap::ArrowBack },
            {  163, StandardPixmap::ArrowForward },
            {  164, StandardPixmap::DirHomeIcon },
            {  165, StandardPixmap::CommandLink },
            {  166, StandardPixmap::VistaShield },
            {  167, StandardPixmap::BrowserReload },
            {  168, StandardPixmap::BrowserStop },
            {  169, StandardPixmap::MediaPlay },
            {  170, StandardPixmap::MediaStop },
            {  171, StandardPixmap::MediaPause },
            {  172, StandardPixmap::MediaSkipForward },
            {  173, StandardPixmap::MediaSkipBackward },
            {  174, StandardPixmap::MediaSeekForward },
            {  175, StandardPixmap::MediaSeekBackward },
            {  176, StandardPixmap::MediaVolume },
            {  177, StandardPixmap::MediaVolumeMuted },
            {  178, StandardPixmap::LineEditClearButton },
            {  179, StandardPixmap::DialogYesToAllButton },
            {  180, StandardPixmap::DialogNoToAllButton },
            {  181, StandardPixmap::DialogSaveAllButton },
            {  182, StandardPixmap::DialogAbortButton },
            {  183, StandardPixmap::DialogRetryButton },
            {  184, StandardPixmap::DialogIgnoreButton },
            {  185, StandardPixmap::RestoreDefaultsButton },
            {  186, StandardPixmap::TabCloseButton },
            {  187, StandardPixmap::NStandardPixmap },
            {  188, StandardPixmap::CustomBase },
        }),
        // enum 'KeyboardSchemes'
        QtMocHelpers::EnumData<KeyboardSchemes>(189, 189, QMC::EnumFlags{}).add({
            {  190, KeyboardSchemes::WindowsKeyboardScheme },
            {  191, KeyboardSchemes::MacKeyboardScheme },
            {  192, KeyboardSchemes::X11KeyboardScheme },
            {  193, KeyboardSchemes::KdeKeyboardScheme },
            {  194, KeyboardSchemes::GnomeKeyboardScheme },
            {  195, KeyboardSchemes::CdeKeyboardScheme },
        }),
        // enum 'UiEffect'
        QtMocHelpers::EnumData<UiEffect>(196, 196, QMC::EnumFlags{}).add({
            {  197, UiEffect::GeneralUiEffect },
            {  198, UiEffect::AnimateMenuUiEffect },
            {  199, UiEffect::FadeMenuUiEffect },
            {  200, UiEffect::AnimateComboUiEffect },
            {  201, UiEffect::AnimateTooltipUiEffect },
            {  202, UiEffect::FadeTooltipUiEffect },
            {  203, UiEffect::AnimateToolBoxUiEffect },
            {  204, UiEffect::HoverEffect },
        }),
    };
    return QtMocHelpers::metaObjectData<QPlatformTheme, qt_meta_tag_ZN14QPlatformThemeE_t>(QMC::PropertyAccessInStaticMetaCall, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject QPlatformTheme::staticMetaObject = { {
    nullptr,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN14QPlatformThemeE_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN14QPlatformThemeE_t>.data,
    nullptr,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN14QPlatformThemeE_t>.metaTypes,
    nullptr
} };

QT_WARNING_POP
